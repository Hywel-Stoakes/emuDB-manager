{"version":3,"file":"bundle-lists-overview.component.js","sourceRoot":"","sources":["../../../../../../../home/markus/code/emuDB-manager/tmp/broccoli_type_script_compiler-input_base_path-pbsVkT0w.tmp/0/src/app/project/bundle-lists-overview/bundle-lists-overview.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnDestroy} from \"@angular/core\";\nimport {BundleList} from \"../../types/bundle-list\";\nimport {ProjectDataService} from \"../../project-data.service\";\nimport {DatabaseInfo} from \"../../types/database-info\";\nimport {Subscription} from \"rxjs/Rx\";\n\n@Component({\n\tmoduleId: module.id,\n\tselector: 'emudbmanager-bundle-lists-overview',\n\ttemplateUrl: 'bundle-lists-overview.component.html',\n\tstyleUrls: ['bundle-lists-overview.component.css']\n})\nexport class BundleListsOverviewComponent implements OnDestroy {\n\tprivate _database:string;\n\tprivate databases:DatabaseInfo[] = [];\n\tprivate sub:Subscription;\n\n\tconstructor(private projectDataService:ProjectDataService) {\n\t}\n\n\tget database():string {\n\t\treturn this._database;\n\t}\n\n\t@Input() set database(database:string) {\n\t\tthis._database = database;\n\n\t\tif (this.sub) {\n\t\t\tthis.sub.unsubscribe();\n\t\t\tthis.sub.unsubscribe();\n\t\t}\n\n\t\tif (this.database) {\n\t\t\tthis.sub = this.projectDataService.getDatabase(this.database).subscribe(next => {\n\t\t\t\tthis.databases = [next];\n\t\t\t});\n\t\t} else {\n\t\t\tthis.sub = this.projectDataService.getAllDatabases().subscribe(next => {\n\t\t\t\tthis.databases = next;\n\t\t\t});\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.sub) {\n\t\t\tthis.sub.unsubscribe();\n\t\t}\n\t}\n\n\t/**\n\t * Count the number of items in a bundle list that have been marked as\n\t * \"finished editing\"\n\t *\n\t * @param bundleList The bundle list in which to count items\n\t * @returns {number} The absolute number of finished items\n\t */\n\tprivate countFinishedItems(bundleList:BundleList):number {\n\t\treturn bundleList.items.reduce((previousValue, currentValue, currentIndex, array) => {\n\t\t\tif (currentValue.finishedEditing) {\n\t\t\t\treturn previousValue + 1;\n\t\t\t} else {\n\t\t\t\treturn previousValue;\n\t\t\t}\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Count the number of items in a bundle list that have been commented.\n\t *\n\t * @param bundleList The bundle list in which to count items\n\t * @returns {number} The absolute number of commented items\n\t */\n\tprivate countCommentedItems(bundleList:BundleList):number {\n\t\treturn bundleList.items.reduce((previousValue, currentValue, currentIndex, array) => {\n\t\t\tif (currentValue.comment !== \"\") {\n\t\t\t\treturn previousValue + 1;\n\t\t\t} else {\n\t\t\t\treturn previousValue;\n\t\t\t}\n\t\t}, 0);\n\t}\n\n\n\t/**\n\t * Count the relative portion (percentage) of items in a bundle list that have\n\t * been marked as \"finished editing\"\n\t *\n\t * @param bundleList The bundle list in which to count items\n\t * @returns {number} The relative portion (percentage) of finished items\n\t */\n\tprivate percentageFinishedItems(bundleList:BundleList):number {\n\t\tif (bundleList.items.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.round(100 * this.countFinishedItems(bundleList) / bundleList.items.length);\n\t}\n\n\t/**\n\t * Count the relative portion (percentage) of items in a bundle list that have\n\t * been commented\n\t *\n\t * @param bundleList The bundle list in which to count items\n\t * @returns {number} The relative portion (percentage) of commented items\n\t */\n\tprivate percentageCommentedItems(bundleList:BundleList):number {\n\t\tif (bundleList.items.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.round(100 * this.countCommentedItems(bundleList) / bundleList.items.length);\n\t}\n\n}\n"]}