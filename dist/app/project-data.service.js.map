{"version":3,"file":"project-data.service.js","sourceRoot":"","sources":["../../../../../home/markus/code/emuDB-manager/tmp/broccoli_type_script_compiler-input_base_path-zxB5nwPa.tmp/0/src/app/project-data.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {ProjectInfo} from \"./types/project-info\";\nimport {DatabaseInfo} from \"./types/database-info\";\nimport {BundleList} from \"./types/bundle-list\";\nimport {Http, URLSearchParams} from \"@angular/http\";\nimport {Observable, Observer, ConnectableObservable} from \"rxjs/Rx\";\nimport {SessionInfo} from \"./types/session-info\";\nimport {UploadInfo} from \"./types/upload-info\";\nimport {ServerResponse} from \"./types/server-response\";\nimport {BundleListItem} from \"./types/bundle-list-item\";\n\n@Injectable()\nexport class ProjectDataService {\n\tprivate infoObservable:ConnectableObservable<ProjectInfo>;\n\tprivate infoObserver:Observer<ProjectInfo>;\n\tprivate password:string;\n\tprivate url = 'https://www.phonetik.uni-muenchen.de/devel/emuDB-manager/emudb-manager.php';\n\tprivate username:string;\n\n\tconstructor(private http:Http) {\n\t\tthis.username = 'dach';\n\t\tthis.password = 'dach';\n\t\tthis.createHotObservable();\n\t}\n\n\tprivate createHotObservable():void {\n\t\tthis.infoObservable = Observable.create(observer => {\n\t\t\tthis.infoObserver = observer;\n\t\t}).publishReplay(1);\n\t\tthis.infoObservable.connect();\n\t}\n\n\tpublic fetchData():void {\n\t\tlet params = new URLSearchParams();\n\t\tparams.set('query', 'project_info');\n\n\t\tthis.serverQuery(params).subscribe((next:any) => {\n\t\t\tif (next.success === true) {\n\t\t\t\tthis.infoObserver.next(next.data);\n\t\t\t} else {\n\t\t\t\tif (next.data === 'BAD_LOGIN') {\n\t\t\t\t\tthis.infoObserver.error('BAD_LOGIN');\n\t\t\t\t\tthis.createHotObservable();\n\t\t\t\t} else {\n\t\t\t\t\tthis.infoObserver.error('UNKNOWN ERROR');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate serverQuery(params:URLSearchParams):Observable<ServerResponse> {\n\t\tconsole.log('Querying server', params);\n\t\tparams.set('user', this.username);\n\t\tparams.set('password', this.password);\n\n\t\treturn this.http\n\t\t\t.get(this.url, {search: params})\n\t\t\t.map(response => {\n\t\t\t\tlet json = response.json();\n\t\t\t\tconsole.log('Received JSON data', json);\n\t\t\t\treturn json;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn Observable.throw('Error during download', error);\n\t\t\t});\n\t}\n\n\tpublic login(username:string, password:string):Observable<void> {\n\t\treturn Observable.create(observer => {\n\t\t\tthis.username = username;\n\t\t\tthis.password = password;\n\n\t\t\tlet params = new URLSearchParams();\n\t\t\tparams.set('query', 'login');\n\n\t\t\tthis.serverQuery(params).subscribe((next:any) => {\n\t\t\t\tif (next.success === true) {\n\t\t\t\t\tobserver.next(null);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t\tthis.fetchData();\n\t\t\t\t} else {\n\t\t\t\t\tobserver.error(next);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic logout():void {\n\t\tthis.createHotObservable();\n\t}\n\n\n\tpublic getAllDatabases():Observable<DatabaseInfo[]> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\treturn x.databases;\n\t\t});\n\t}\n\n\tpublic getAllBundleLists():Observable<BundleList[]> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\tlet result:BundleList[] = [];\n\t\t\tfor (let i = 0; i < x.databases.length; ++i) {\n\t\t\t\tresult = result.concat(x.databases[i].bundleLists);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tpublic getBundleList(database:string, name:string, status:string):Observable<BundleList> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\tfor (let i = 0; i < x.databases.length; ++i) {\n\t\t\t\tif (x.databases[i].name === database) {\n\t\t\t\t\tfor (let j = 0; j < x.databases[i].bundleLists.length; ++j) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tx.databases[i].bundleLists[j].name === name\n\t\t\t\t\t\t\t&& x.databases[i].bundleLists[j].status === status\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn x.databases[i].bundleLists[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t});\n\t}\n\n\t/**\n\t * Returns the info object for a single database\n\t *\n\t * @param name The name of the database in question\n\t * @returns A DatabaseInfo object if the DB exists, otherwise null\n\t */\n\tpublic getDatabase(name:string):Observable<DatabaseInfo> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\tfor (let i = 0; i < x.databases.length; ++i) {\n\t\t\t\tif (x.databases[i].name === name) {\n\t\t\t\t\treturn x.databases[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic getName():Observable<string> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\treturn x.name;\n\t\t});\n\t}\n\n\tpublic getAllUploads():Observable<UploadInfo[]> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\treturn x.uploads;\n\t\t});\n\t}\n\n\tpublic getUpload(uuid:string):Observable<UploadInfo> {\n\t\treturn this.infoObservable.map((x:ProjectInfo) => {\n\t\t\tfor (let i = 0; i < x.uploads.length; ++i) {\n\t\t\t\tif (x.uploads[i].uuid === uuid) {\n\t\t\t\t\treturn x.uploads[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tpublic countBundles(sessions:SessionInfo[]):number {\n\t\tlet result = 0;\n\t\tfor (let i = 0; i < sessions.length; ++i) {\n\t\t\tresult += sessions[i].bundles.length;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic renameDatabase(oldName:string, newName:string):Observable<void> {\n\t\treturn Observable.create(observer => {\n\t\t\tlet params = new URLSearchParams();\n\t\t\tparams.set('query', 'rename_db');\n\t\t\tparams.set('old_name', oldName);\n\t\t\tparams.set('new_name', newName);\n\n\t\t\tthis.serverQuery(params).subscribe((next:any) => {\n\t\t\t\tif (next.success === true) {\n\t\t\t\t\tobserver.next(null);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t} else {\n\t\t\t\t\tobserver.error(next);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic editBundle(database:string,\n\t                  name:string,\n\t                  status:string,\n\t                  newName:string,\n\t                  newStatus:string):Observable<void> {\n\t\treturn Observable.create(observer => {\n\t\t\tlet params = new URLSearchParams();\n\t\t\tparams.set('query', 'edit_bundle_list');\n\t\t\tparams.set('database', database);\n\t\t\tparams.set('old_name', name);\n\t\t\tparams.set('old_status', status);\n\t\t\tparams.set('new_name', newName);\n\t\t\tparams.set('new_status', newStatus);\n\n\t\t\tthis.serverQuery(params).subscribe((next:any) => {\n\t\t\t\tif (next.success === true) {\n\t\t\t\t\tobserver.next(null);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t} else {\n\t\t\t\t\tobserver.error(next);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getUploadURL():string {\n\t\tlet params = new URLSearchParams();\n\t\tparams.set('user', this.username);\n\t\tparams.set('password', this.password);\n\t\tparams.set('query', 'upload');\n\n\t\treturn this.url + '?' + params.toString();\n\t}\n\n\tpublic deleteUpload(identifier:string) {\n\t\treturn Observable.create(observer => {\n\t\t\tlet params = new URLSearchParams();\n\t\t\tparams.set('query', 'delete_upload');\n\t\t\tparams.set('uuid', identifier);\n\n\t\t\tthis.serverQuery(params).subscribe((next:any) => {\n\t\t\t\tif (next.success === true) {\n\t\t\t\t\tobserver.next(null);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t} else {\n\t\t\t\t\tobserver.error(next);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic saveUpload(identifier:string, name:string):Observable<ServerResponse> {\n\t\treturn Observable.create(observer => {\n\t\t\tlet params = new URLSearchParams();\n\t\t\tparams.set('query', 'save_upload');\n\t\t\tparams.set('uuid', identifier);\n\t\t\tparams.set('name', name);\n\n\t\t\tthis.serverQuery(params).subscribe((next:any) => {\n\t\t\t\tif (next.success === true) {\n\t\t\t\t\tobserver.next(null);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t} else {\n\t\t\t\t\tobserver.error(next);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic generateBundleList(database:string,\n\t                          sessionPattern:string,\n\t                          bundlePattern:string,\n\t                          editors:string[],\n\t                          personsPerBundle:number,\n\t                          shuffled:boolean) {\n\n\n\t\t//////////\n\t\t// Check parameter constraints\n\t\t//\n\n\t\tif (editors.length < personsPerBundle) {\n\t\t\t//\n\t\t\t// @todo wahaha failure\n\t\t}\n\n\t\t//\n\t\t//////////\n\n\n\t\treturn this.getDatabase(database).map(dbInfo => {\n\t\t\tif (dbInfo === null) {\n\n\t\t\t}\n\n\t\t\tlet sessionRegex = new RegExp(sessionPattern);\n\t\t\tlet bundleRegex = new RegExp(bundlePattern);\n\n\n\t\t\t//////////\n\t\t\t// Select the bundles to add to the newly generated bunldle list(s)\n\t\t\t//\n\n\t\t\tlet bundleListSource:BundleListItem[] = [];\n\n\t\t\tfor (let i = 0; i < dbInfo.sessions.length; ++i) {\n\t\t\t\tif (sessionRegex.test(dbInfo.sessions[i].name)) {\n\t\t\t\t\tfor (let j = 0; j < dbInfo.sessions[i].bundles.length; ++j) {\n\t\t\t\t\t\tif (bundleRegex.test(dbInfo.sessions[i].bundles[j])) {\n\t\t\t\t\t\t\tbundleListSource.push({\n\t\t\t\t\t\t\t\tsession: dbInfo.sessions[i].name,\n\t\t\t\t\t\t\t\tname: dbInfo.sessions[i].bundles[j],\n\t\t\t\t\t\t\t\tcomment: '',\n\t\t\t\t\t\t\t\tfinishedEditing: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\t//////////\n\n\t\t\t//////////\n\t\t\t// Shuffle bundle list source if so requested\n\t\t\t//\n\n\t\t\tif (shuffled) {\n\t\t\t\t// @todo shuffle\n\t\t\t}\n\n\t\t\t//\n\t\t\t//////////\n\n\t\t\t//////////\n\t\t\t// Distribute bundles to editors\n\t\t\t//\n\n\t\t\t// Prepare a bundle list for each editor\n\n\t\t\tlet resultBundleLists:BundleList[] = [];\n\n\t\t\tfor (let i = 0; i < editors.length; ++i) {\n\t\t\t\tresultBundleLists.push({\n\t\t\t\t\tname: editors[i],\n\t\t\t\t\tstatus: '',\n\t\t\t\t\titems: []\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// The next editor who will receive a bundle\n\t\t\tlet nextEditor:number = -1;\n\n\t\t\tfor (let i = 0; i < bundleListSource.length; ++i) {\n\t\t\t\tfor (let j = 0; j < personsPerBundle; ++j) {\n\t\t\t\t\tnextEditor += 1;\n\t\t\t\t\tif (nextEditor >= editors.length) {\n\t\t\t\t\t\tnextEditor = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tresultBundleLists[nextEditor].items.push(bundleListSource[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\n\t\t\t//////////\n\n\t\t\t// @todo actually return\n\n\t\t\treturn resultBundleLists;\n\t\t});\n\t}\n}\n"]}