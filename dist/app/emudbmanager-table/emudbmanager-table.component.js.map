{"version":3,"file":"emudbmanager-table.component.js","sourceRoot":"","sources":["../../../../../../home/markus/code/emuDB-manager/tmp/broccoli_type_script_compiler-input_base_path-FI8bgmIz.tmp/0/src/app/emudbmanager-table/emudbmanager-table.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input} from \"@angular/core\";\n\n@Component({\n\tmoduleId: module.id,\n\tselector: 'emudbmanager-table',\n\ttemplateUrl: 'emudbmanager-table.component.html',\n\tstyleUrls: ['emudbmanager-table.component.css']\n})\nexport class EmudbmanagerTableComponent implements OnInit {\n\t@Input() columns: {\n\t\ttype: 'boolean' | 'string';\n\t\theading: string;\n\t\tfilter: any;\n\t\tvalue: Function;\n\t}[];\n\tprivate _data: Array<any>;\n\n\tget data(): Array<any> {\n\t\treturn this._data;\n\t}\n\n\t@Input() set data(a: Array<any>) {\n\t\tif (!Array.isArray(a)) {\n\t\t\tthis._data = [];\n\t\t} else {\n\t\t\tthis._data = a;\n\t\t}\n\t}\n\n\tprivate reverseSort = false;\n\tprivate sortColumn;\n\tprivate visibleCount = 0;\n\n\t/**\n\t * Filter this.data based on the filters specified in this.columns[x].filter\n\t * @returns {Array}\n\t */\n\tprivate getVisibleData() {\n\t\tlet result = [];\n\n\t\t/**\n\t\t * Iterate over all data. If none of the filters block, the item\n\t\t * will be pushed to result.\n\t\t */\n\t\tfor (let i = 0; i < this.data.length; ++i) {\n\t\t\tlet include = true;\n\n\t\t\tfor (let j = 0; j < this.columns.length; ++j) {\n\t\t\t\tif (typeof this.columns[j].filter !== 'undefined') {\n\t\t\t\t\t// Different data types (string, boolean) are filtered\n\t\t\t\t\t// differently\n\n\t\t\t\t\tif (this.columns[j].type === 'string') {\n\t\t\t\t\t\tlet regex;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregex = new RegExp(this.columns[j].filter);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet value = this.columns[j].value(this.data[i]).toString();\n\n\t\t\t\t\t\tif (value.match(regex) === null) {\n\t\t\t\t\t\t\tinclude = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.columns[j].type === 'boolean') {\n\t\t\t\t\t\tlet filter = this.columns[j].filter;\n\t\t\t\t\t\tif (typeof filter !== 'boolean') {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.columns[j].value(this.data[i]) !== filter) {\n\t\t\t\t\t\t\tinclude = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (include) {\n\t\t\t\tresult.push(this.data[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis.visibleCount = result.length;\n\n\t\tif (this.sortColumn) {\n\t\t\tresult.sort((a, b) => {\n\t\t\t\tif (this.sortColumn.value(a) > this.sortColumn.value(b)) {\n\t\t\t\t\tif (this.reverseSort) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.sortColumn.value(a) == this.sortColumn.value(b)) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.reverseSort) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\n\tconstructor() {\n\t}\n\n\tngOnInit() {\n\t}\n\n\tprivate isBoolean(test) {\n\t\treturn typeof test === 'boolean';\n\t}\n\n\tprivate percentage(): number {\n\t\tif (this.data.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.round(100 * this.visibleCount / this.data.length);\n\t}\n\n\tprivate sort(column) {\n\t\tif (this.sortColumn === column) {\n\t\t\tthis.reverseSort = !this.reverseSort;\n\t\t} else {\n\t\t\tthis.sortColumn = column;\n\t\t\tthis.reverseSort = false;\n\t\t}\n\t}\n}\n"]}