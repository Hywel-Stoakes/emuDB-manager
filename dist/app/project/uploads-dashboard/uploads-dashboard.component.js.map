{"version":3,"file":"uploads-dashboard.component.js","sourceRoot":"","sources":["../../../../../../../home/markus/code/emuDB-manager/tmp/broccoli_type_script_compiler-input_base_path-7gBrH8uH.tmp/0/src/app/project/uploads-dashboard/uploads-dashboard.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2C,eAAe,CAAC,CAAA;AAC3D,2CAAuC,gDAAgD,CAAC,CAAA;AAGxF,qCAAiC,4BAA4B,CAAC,CAAA;AAC9D,sCAAkC,sCAAsC,CAAC,CAAA;AAWzE;IAKC,mCAAoB,kBAAqC;QAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;QAJjD,UAAK,GAAS,UAAU,CAAC;QAEzB,YAAO,GAAgB,EAAE,CAAC;IAGlC,CAAC;IAED,4CAAQ,GAAR;QAAA,iBAIC;QAHA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;YACvE,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,+CAAW,GAAX;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC;IACF,CAAC;IAzBF;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,gCAAgC;YAC1C,WAAW,EAAE,kCAAkC;YAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;YAC9C,UAAU,EAAE,CAAC,qDAAwB,EAAE,2CAAmB,CAAC;SAC3D,CAAC;;iCAAA;IAqBF,gCAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,iCAAyB,4BAoBrC,CAAA","sourcesContent":["import {Component, OnInit, OnDestroy} from \"@angular/core\";\nimport {UploadsOverviewComponent} from \"../uploads-overview/uploads-overview.component\";\nimport {UploadInfo} from \"../../types/upload-info\";\nimport {Subscription} from \"rxjs/Rx\";\nimport {ProjectDataService} from \"../../project-data.service\";\nimport {UploadFormComponent} from \"../upload-form/upload-form.component\";\n\ntype State = 'Overview' | 'New';\n\n@Component({\n\tmoduleId: module.id,\n\tselector: 'emudbmanager-uploads-dashboard',\n\ttemplateUrl: 'uploads-dashboard.component.html',\n\tstyleUrls: ['uploads-dashboard.component.css'],\n\tdirectives: [UploadsOverviewComponent, UploadFormComponent]\n})\nexport class UploadsDashboardComponent implements OnInit,OnDestroy {\n\tprivate state:State = 'Overview';\n\tprivate subUploads:Subscription;\n\tprivate uploads:UploadInfo[] = [];\n\n\tconstructor(private projectDataService:ProjectDataService) {\n\t}\n\n\tngOnInit() {\n\t\tthis.subUploads = this.projectDataService.getAllUploads().subscribe(next => {\n\t\t\tthis.uploads = next;\n\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subUploads) {\n\t\t\tthis.subUploads.unsubscribe();\n\t\t}\n\t}\n\n}\n"]}