{"version":3,"file":"upload-form.component.js","sourceRoot":"","sources":["../../../../../../../home/markus/code/emuDB-manager/tmp/broccoli_type_script_compiler-input_base_path-8BsARNCj.tmp/0/src/app/project/upload-form/upload-form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAgC,eAAe,CAAC,CAAA;AAChD,6BAAgC,2BAA2B,CAAC,CAAA;AAC5D,qCAAiC,4BAA4B,CAAC,CAAA;AAS9D;IAUC,6BAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QATlD,iBAAY,GAAU,EAAE,CAAC;QACzB,YAAO,GAAiB;YAC/B,GAAG,EAAE,EAAE;SACP,CAAC;QACM,mBAAc,GAAW,EAAE,CAAC;QAC5B,oBAAe,GAAU,EAAE,CAAC;QAKnC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,aAAM,CAAC,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC3D,CAAC;IAED,4CAAc,GAAd,UAAe,IAAI;QAAnB,iBA2BC;QA1BA,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACb,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAE5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClD,KAAI,CAAC,eAAe,GAAG,wCAAwC;oBAC9D,mDAAmD;oBACnD,8CAA8C,CAAC;YACjD,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,8BAA8B,CAAC;QACpD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;YAEpC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,cAAc,GAAG,oCAAoC;oBACzD,gDAAgD,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;YACzE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;YACtC,CAAC;QACF,CAAC;IACF,CAAC;IAlDF;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,0BAA0B;YACpC,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;YACxC,UAAU,EAAE,CAAC,gCAAiB,CAAC;SAC/B,CAAC;;2BAAA;IA8CF,0BAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,2BAAmB,sBA6C/B,CAAA","sourcesContent":["import {Component, NgZone} from \"@angular/core\";\nimport {UPLOAD_DIRECTIVES} from \"ng2-uploader/ng2-uploader\";\nimport {ProjectDataService} from \"../../project-data.service\";\n\n@Component({\n\tmoduleId: module.id,\n\tselector: 'emudbmanager-upload-form',\n\ttemplateUrl: 'upload-form.component.html',\n\tstyleUrls: ['upload-form.component.css'],\n\tdirectives: [UPLOAD_DIRECTIVES]\n})\nexport class UploadFormComponent {\n\tprivate errorMessage:string = '';\n\tprivate options: {url:string} = {\n\t\turl: ''\n\t};\n\tprivate successMessage: string = '';\n\tprivate transferMessage:string = '';\n\tprivate uploadProgress: number;\n\tprivate zone: NgZone;\n\n\tconstructor(private projectDataService: ProjectDataService) {\n\t\tthis.uploadProgress = 0;\n\t\tthis.zone = new NgZone({ enableLongStackTrace: false });\n\t\tthis.options.url = this.projectDataService.getUploadURL();\n\t}\n\n\thandleProgress(data): void {\n\t\tthis.zone.run(() => {\n\t\t\tthis.uploadProgress = data.progress.percent;\n\n\t\t\tif (data.progress.loaded === data.progress.total) {\n\t\t\t\tthis.transferMessage = 'Upload complete. Please wait while the' +\n\t\t\t\t\t' server extracts the contents of the zip file (no' +\n\t\t\t\t\t' progress indicator is available for this) â€¦';\n\t\t\t}\n\t\t});\n\n\t\tif (data.abort) {\n\t\t\tthis.errorMessage = 'Upload was aborted.';\n\t\t} else if (data.error) {\n\t\t\tthis.errorMessage = 'Unknown error during upload.';\n\t\t} else if (data.done) {\n\t\t\tthis.projectDataService.fetchData();\n\n\t\t\tlet response = JSON.parse(data.response);\n\n\t\t\tif (response.success === true) {\n\t\t\t\tthis.successMessage = 'The server has finished processing' +\n\t\t\t\t\t' the upload. It has been saved under the UUID ' + response.data + '.';\n\t\t\t} else {\n\t\t\t\tthis.errorMessage = response.message;\n\t\t\t}\n\t\t}\n\t}\n\n}\n"]}