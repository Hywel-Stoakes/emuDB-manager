webpackJsonp([0,4],{1029:function(t,e,n){t.exports=n(445)},243:function(t,e,n){"use strict";function a(t){for(var e=0,n=0;n<t.length;++n)e+=t[n].bundles.length;return e}e.a=a},26:function(t,e,n){"use strict";var a=n(1),s=n(337),i=n(765),o=(n.n(i),n(569)),r=n(570);n.d(e,"a",function(){return u});var l=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},c=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=function(){function t(t){this.http=t,this._connectionCount=0,this.emuWebAppURL="https://ips-lmu.github.io/EMU-webApp/",this.nodeJSServerURL="wss://webapp2.phonetik.uni-muenchen.de:17890/manager",this.url="https://www.phonetik.uni-muenchen.de/apps/emuDB-manager/server-side/emudb-manager.php",this.username="",this.password="",this.createHotObservable()}return t.prototype.createHotObservable=function(){var t=this;this.infoObservable=i.Observable.create(function(e){t.infoObserver=e}).publishReplay(1),this.infoObservable.connect()},t.prototype.fetchData=function(){var t=this,e={query:"project_info"};this.serverQuery(e).subscribe(function(e){e.success===!0?t.infoObserver.next(e.data):"BAD_LOGIN"===e.data?(t.infoObserver.error("BAD_LOGIN"),t.createHotObservable()):console.log("Unknown error in server response")})},Object.defineProperty(t.prototype,"connectionCount",{get:function(){return this._connectionCount},set:function(t){this._connectionCount=t},enumerable:!0,configurable:!0}),t.prototype.serverQuery=function(t){var e=this;console.log("Querying server",t);var n=new s.a({"Content-Type":"application/x-www-form-urlencoded"}),a=new s.b({headers:n});t.user=this.username,t.password=this.password;var o="";for(var r in t)""!=o&&(o+="&"),o+=encodeURIComponent(r)+"="+encodeURIComponent(t[r]);return++this._connectionCount,this.http.post(this.url,o,a).map(function(t){--e._connectionCount;var n=t.json();return console.log("Received JSON data",n),n}).catch(function(t){return--e._connectionCount,i.Observable.throw("Error during download",t)})},t.prototype.serverQueryWithDefaultSubscription=function(t){var e=this;return i.Observable.create(function(n){e.serverQuery(t).subscribe(function(t){t.success===!0?(n.next(t.data),n.complete()):n.error(t)})})},t.prototype.login=function(t,e){var n=this;return i.Observable.create(function(a){n.username=t,n.password=e;var s={query:"login"};n.serverQuery(s).subscribe(function(t){t.success===!0?(a.next(null),a.complete(),n.fetchData()):a.error(t)})})},t.prototype.logout=function(){this.username="",this.password="",this.createHotObservable()},t.prototype.getUploadTarget=function(){return{url:this.url,params:{user:this.username,password:this.password,query:"upload"}}},t.prototype.getDownloadTarget=function(t,e){return{url:this.url,options:{query:"download_database",user:this.username,password:this.password,database:t,treeish:e}}},t.prototype.getAllDatabases=function(){return this.infoObservable.map(function(t){return t.databases})},t.prototype.getAllBundleLists=function(){return this.infoObservable.map(function(t){for(var e=[],n=0;n<t.databases.length;++n)e=e.concat(t.databases[n].bundleLists);return e})},t.prototype.getBundleList=function(t,e,n){return this.infoObservable.map(function(a){for(var s=0;s<a.databases.length;++s)if(a.databases[s].name===t)for(var i=0;i<a.databases[s].bundleLists.length;++i)if(a.databases[s].bundleLists[i].name===e&&a.databases[s].bundleLists[i].archiveLabel===n)return a.databases[s].bundleLists[i];return null})},t.prototype.getDatabase=function(t){return this.infoObservable.map(function(e){for(var n=0;n<e.databases.length;++n)if(e.databases[n].name===t)return e.databases[n];return null})},t.prototype.getName=function(){return this.infoObservable.map(function(t){return t.name})},t.prototype.getDownloads=function(t){return this.infoObservable.map(function(e){return e.downloads.filter(function(e){return e.database==t})})},t.prototype.getAllUploads=function(){return this.infoObservable.map(function(t){return t.uploads})},t.prototype.getUpload=function(t){return this.infoObservable.map(function(e){for(var n=0;n<e.uploads.length;++n)if(e.uploads[n].uuid===t)return e.uploads[n];return null})},t.prototype.getEmuWebAppURL=function(t){var e=this;return this.getName().map(function(n){var a=e.emuWebAppURL;a+="?autoConnect=true&serverUrl=";var s=e.nodeJSServerURL;return s+="/"+e.username+"/databases/"+t,a+=encodeURIComponent(s)})},t.prototype.getCommitList=function(t){var e=this;return i.Observable.create(function(a){var s={query:"list_commits",database:t};e.serverQuery(s).subscribe(function(t){t.success===!0?(a.next(n.i(r.a)(t.data)),a.complete()):a.error(t)})})},t.prototype.getTagList=function(t){return this.serverQueryWithDefaultSubscription({query:"list_tags",database:t})},t.prototype.renameDatabase=function(t,e){return this.serverQueryWithDefaultSubscription({query:"rename_db",old_name:t,new_name:e})},t.prototype.setDatabaseConfiguration=function(t,e,n){return this.serverQueryWithDefaultSubscription({query:"set_database_configuration",database:t,bundleComments:e,bundleFinishedEditing:n})},t.prototype.addTag=function(t,e,n){return this.serverQueryWithDefaultSubscription({query:"add_tag",database:t,commit:e,label:n})},t.prototype.editBundleList=function(t,e,n,a,s){return this.serverQueryWithDefaultSubscription({query:"edit_bundle_list",database:t,old_name:e,old_archive_label:n,new_name:a,new_archive_label:s})},t.prototype.deleteUpload=function(t){return this.serverQueryWithDefaultSubscription({query:"delete_upload",uuid:t})},t.prototype.deleteBundleList=function(t,e){return this.serverQueryWithDefaultSubscription({query:"delete_bundle_list",database:t,name:e.name,archive_label:e.archiveLabel})},t.prototype.saveUpload=function(t,e){return this.serverQueryWithDefaultSubscription({query:"save_upload",uuid:t,name:e})},t.prototype.fastForward=function(t,e){return this.serverQueryWithDefaultSubscription({query:"fast_forward",upload_uuid:t,database:e})},t.prototype.createArchive=function(t,e){return this.serverQueryWithDefaultSubscription({query:"create_archive",database:t,treeish:e})},t.prototype.duplicateBundleList=function(t,e,n,a){for(var s={name:e.name,archiveLabel:e.archiveLabel,items:[]},i=0;i<e.items.length;++i)a&&!e.items[i].comment||s.items.push({name:e.items[i].name,session:e.items[i].session,comment:e.items[i].comment,finishedEditing:!1});return this.serverQueryWithDefaultSubscription({query:"save_bundle_list",database:t,name:n,list:JSON.stringify(s.items)})},t.prototype.generateBundleList=function(t,e,a,s,r,l){var c=this;return i.Observable.create(function(i){c.getDatabase(t).map(function(u){if(null===u)return void i.error("Invalid database specified");var d=n.i(o.a)(u,e,a,s,r,l);if("string"==typeof d)return void i.error({message:d});for(var p=0,b=0;b<d.length;++b){var f={query:"save_bundle_list",database:t,name:d[b].name,list:JSON.stringify(d[b].items)};c.serverQuery(f).subscribe(function(t){return t.success!==!0?void i.error(t):(++p,i.next(null),p===d.length&&i.complete(),void 0)})}}).subscribe().unsubscribe()})},t=l([n.i(a.R)(),c("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.c&&s.c)&&e||Object])],t);var e}()},362:function(t,e,n){"use strict";function a(t){return!!(t&&t.dbConfig&&t.dbConfig.EMUwebAppConfig&&t.dbConfig.EMUwebAppConfig.restrictions)&&t.dbConfig.EMUwebAppConfig.restrictions.bundleComments===!0}e.a=a},363:function(t,e,n){"use strict";function a(t){return!!(t&&t.dbConfig&&t.dbConfig.EMUwebAppConfig&&t.dbConfig.EMUwebAppConfig.restrictions)&&t.dbConfig.EMUwebAppConfig.restrictions.bundleFinishedEditing===!0}e.a=a},364:function(t,e,n){"use strict";var a=n(1),s=n(91),i=n(26);n.d(e,"a",function(){return l});var o=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},l=function(){function t(t,e,n){this.projectDataService=t,this.router=e,this.route=n,this.allBundles=[],this.commentedBundles=[],this.database="",this.deleteError="",this.duplicationEditor={commentedOnly:!1,editorName:"",messageError:"",messageSuccess:""},this.infoEditor={isEditing:!1,messageError:"",messageSuccess:"",newName:"",newArchiveLabel:""},this.reallyDelete=!1,this.state="Info",this.tableFormat=[{type:"string",heading:"Session",value:function(t){return t.session}},{type:"string",heading:"Bundle",value:function(t){return t.name}},{type:"boolean",heading:"Finished editing",value:function(t){return t.finishedEditing}},{type:"string",heading:"Comment",value:function(t){return t.comment}}]}return t.prototype.ngOnInit=function(){var t=this;this.subParams=this.route.params.subscribe(function(e){"undefined"==typeof e.archiveLabel&&(e.archiveLabel=""),t.subBundleList=t.projectDataService.getBundleList(e.database,e.name,e.archiveLabel).subscribe(function(n){t.database=e.database,t.setBundleList(n)})})},t.prototype.ngOnDestroy=function(){this.subBundleList&&this.subBundleList.unsubscribe(),this.subParams&&this.subParams.unsubscribe()},t.prototype.setBundleList=function(t){null===t||(this.bundleList=t,this.infoEditor.newName=t.name,this.infoEditor.newArchiveLabel=t.archiveLabel,this.allBundles=t.items,this.commentedBundles=t.items.filter(function(t){return""!==t.comment}))},t.prototype.saveEditedInfo=function(){var t=this,e=this.infoEditor.newName,n=this.infoEditor.newArchiveLabel;return this.toggleEditInfo(),this.infoEditor.messageError="",this.infoEditor.messageSuccess="",this.bundleList.name===e&&this.bundleList.archiveLabel===n?void(this.infoEditor.messageSuccess="No changes to be saved."):void this.projectDataService.editBundleList(this.database,this.bundleList.name,this.bundleList.archiveLabel,e,n).subscribe(function(a){t.infoEditor.messageSuccess="Successfully edited.",t.projectDataService.fetchData(),t.subBundleList&&t.subBundleList.unsubscribe(),t.subBundleList=t.projectDataService.getBundleList(t.database,e,n).subscribe(function(e){t.setBundleList(e)})},function(e){t.infoEditor.messageError=e.message})},t.prototype.toggleEditInfo=function(){this.infoEditor.isEditing?(this.infoEditor.newName=this.bundleList.name,this.infoEditor.newArchiveLabel=this.bundleList.archiveLabel,this.infoEditor.isEditing=!1):this.infoEditor.isEditing=!0},t.prototype.deleteBundleList=function(){var t=this;this.reallyDelete=!1,this.projectDataService.deleteBundleList(this.database,this.bundleList).subscribe(function(e){t.projectDataService.fetchData(),t.router.navigate(["/project/databases",t.database])},function(e){t.deleteError=e.message})},t.prototype.duplicateBundleList=function(){var t=this;this.duplicationEditor.messageError="",this.duplicationEditor.messageSuccess="";var e=this.duplicationEditor.editorName;this.duplicationEditor.editorName="",this.projectDataService.duplicateBundleList(this.database,this.bundleList,e,this.duplicationEditor.commentedOnly).subscribe(function(e){t.duplicationEditor.messageSuccess="Successfully duplicated bundle list.",t.projectDataService.fetchData()},function(e){t.duplicationEditor.messageError=e.message})},t=o([n.i(a.G)({selector:"emudbmanager-bundle-list-detail",template:n(751),styles:[n(735)]}),r("design:paramtypes",["function"==typeof(e="undefined"!=typeof i.a&&i.a)&&e||Object,"function"==typeof(l="undefined"!=typeof s.a&&s.a)&&l||Object,"function"==typeof(c="undefined"!=typeof s.b&&s.b)&&c||Object])],t);var e,l,c}()},365:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(363),o=n(362);n.d(e,"a",function(){return c});var r=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},l=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},c=function(){function t(t){this.projectDataService=t,this.state="Overview",this.bundlePattern=".*",this.editors=[],this.generatorError="",this.generatorSuccess="",this.newEditor="",this.personsPerBundle=1,this.selectedDatabase=null,this.sessionPattern=".*",this.shuffle=!1}return t.prototype.ngOnInit=function(){var t=this;this.subBundleLists=this.projectDataService.getAllBundleLists().subscribe(function(e){t.bundleLists=e}),this.subDatabases=this.projectDataService.getAllDatabases().subscribe(function(e){t.databases=e,t.selectedDatabase=null})},t.prototype.ngOnDestroy=function(){this.subBundleLists&&this.subBundleLists.unsubscribe(),this.subDatabases&&this.subDatabases.unsubscribe()},t.prototype.generateLists=function(){var t=this;return this.checkNumber(),this.generatorError="",this.generatorSuccess="",this.selectedDatabase?0===this.editors.length?void(this.generatorError="No editors specified"):void this.projectDataService.generateBundleList(this.selectedDatabase.name,this.sessionPattern,this.bundlePattern,this.editors.map(function(t){return t.name}),this.personsPerBundle,this.shuffle).subscribe(function(t){},function(e){t.generatorError=e.message},function(){t.generatorSuccess+="Successfully generated all bundle lists",t.projectDataService.fetchData()}):void(this.generatorError="Select a database first")},t.prototype.addEditor=function(){this.editors.push({name:this.newEditor}),this.newEditor=""},t.prototype.checkEditor=function(t){""===this.editors[t].name&&(this.editors.splice(t,1),this.checkNumber())},t.prototype.checkNumber=function(){this.personsPerBundle>this.editors.length&&(this.personsPerBundle=this.editors.length)},t.prototype.checkDBConfig=function(){return n.i(o.a)(this.selectedDatabase)&&n.i(i.a)(this.selectedDatabase)},t=r([n.i(a.G)({selector:"emudbmanager-bundle-lists-dashboard",template:n(752),styles:[n(736)]}),l("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},366:function(t,e,n){"use strict";var a=n(1),s=n(26);n.d(e,"a",function(){return r});var i=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=function(){function t(t){this.projectDataService=t,this.bundleLists=[],this.databases=[],this.uploads=[]}return t.prototype.ngOnInit=function(){var t=this;this.subProjectName=this.projectDataService.getName().subscribe(function(e){t.projectName=e}),this.subBundleLists=this.projectDataService.getAllBundleLists().subscribe(function(e){t.bundleLists=e}),this.subDatabases=this.projectDataService.getAllDatabases().subscribe(function(e){t.databases=e}),this.subUploads=this.projectDataService.getAllUploads().subscribe(function(e){t.uploads=e})},t.prototype.ngOnDestroy=function(){this.subBundleLists&&this.subBundleLists.unsubscribe(),this.subDatabases&&this.subDatabases.unsubscribe(),this.subProjectName&&this.subProjectName.unsubscribe(),this.subUploads&&this.subUploads.unsubscribe()},t=i([n.i(a.G)({selector:"emudbmanager-dashboard",template:n(754),styles:[n(738)]}),o("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},367:function(t,e,n){"use strict";var a=n(1),s=n(26);n.d(e,"a",function(){return r});var i=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=function(){function t(t){this.projectDataService=t,this.databases=[]}return t.prototype.ngOnInit=function(){var t=this;this.sub=this.projectDataService.getAllDatabases().subscribe(function(e){t.databases=e})},t.prototype.ngOnDestroy=function(){this.sub&&this.sub.unsubscribe()},t=i([n.i(a.G)({selector:"emudbmanager-database-dashboard",template:n(755),styles:[n(739)]}),o("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},368:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(91),o=n(362),r=n(363);n.d(e,"a",function(){return u});var l=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},c=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},u=function(){function t(t,e){this.projectDataService=t,this.route=e,this.createArchiveCurrent="",this.createArchiveError="",this.downloadList=[],this.newName="",this.renameError="",this.renameSuccess="",this.saveConfigError="",this.saveConfigSuccess="",this.state="BundleLists",this.tableFormat=[{type:"string",heading:"Name",value:function(t){return t.name}},{type:"string",heading:"Bundles",value:function(t){return t.bundles.length}}],this.tagList=[],this.webAppLink=""}return t.prototype.ngOnInit=function(){var t=this;this.subParams=this.route.params.subscribe(function(e){t.unsubscribe(!1),t.subscribe(e.name)})},t.prototype.ngOnDestroy=function(){this.unsubscribe(!0)},t.prototype.subscribe=function(t){var e=this;this.subDatabase=this.projectDataService.getDatabase(t).subscribe(function(t){e.database=t,e.configComments=e.savedConfigComments(),e.configFinishedEditing=e.savedConfigFinishedEditing()}),this.subCommitList=this.projectDataService.getCommitList(t).subscribe(function(t){e.commitList=t}),this.subDownloadList=this.projectDataService.getDownloads(t).subscribe(function(t){e.downloadList=t}),this.subTagList=this.projectDataService.getTagList(t).subscribe(function(t){e.tagList=t}),this.subWebAppLink=this.projectDataService.getEmuWebAppURL(t).subscribe(function(t){e.webAppLink=t})},t.prototype.unsubscribe=function(t){this.subParams&&t&&this.subParams.unsubscribe(),this.subDatabase&&this.subDatabase.unsubscribe(),this.subDownloadList&&this.subDatabase.unsubscribe(),this.subCommitList&&this.subCommitList.unsubscribe(),this.subTagList&&this.subTagList.unsubscribe(),this.subWebAppLink&&this.subWebAppLink.unsubscribe()},t.prototype.editTag=function(t){t.editingTag=!t.editingTag},t.prototype.countTags=function(){var t=this.tagList.length;return t},t.prototype.countDownloads=function(){var t=this.downloadList.length;return t},t.prototype.countCommits=function(){var t=0;if(this.commitList)for(var e=0;e<this.commitList.length;++e)for(var n=0;n<this.commitList[e].days.length;++n)t+=this.commitList[e].days[n].commits.length;return t},t.prototype.createArchive=function(t){var e=this;this.projectDataService.createArchive(this.database.name,t).subscribe(function(n){e.createArchiveCurrent=t},function(t){e.createArchiveError="Error while preparing"})},t.prototype.saveTag=function(t){var e=this;return t.saveTagError="",t.saveTagSuccess="",""===t.tagLabel?void(t.saveTagError="Empty labels are not allowed."):void this.projectDataService.addTag(this.database.name,t.commitID,t.tagLabel).subscribe(function(n){t.saveTagSuccess="Successfully created tag: "+t.tagLabel,t.tagLabel="",t.editingTag=!1,e.subTagList&&e.subTagList.unsubscribe(),e.subTagList=e.projectDataService.getTagList(e.database.name).subscribe(function(t){e.tagList=t})},function(e){t.saveTagError=e.message})},t.prototype.saveConfiguration=function(){var t=this;return this.saveConfigError="",this.saveConfigSuccess="",this.hasUnsavedChanges()?void this.projectDataService.setDatabaseConfiguration(this.database.name,this.configComments,this.configFinishedEditing).subscribe(function(e){t.saveConfigSuccess="Successfully stored configuration changes.",t.projectDataService.fetchData()},function(e){t.saveConfigError=e.message}):void(this.saveConfigError="No changes to be saved.")},t.prototype.renameDatabase=function(){var t=this;return this.renameError="",this.renameSuccess="",this.database.name===this.newName?void(this.renameSuccess="That is already the database’s name."):void this.projectDataService.renameDatabase(this.database.name,this.newName).subscribe(function(e){t.renameSuccess="Successfully renamed",t.projectDataService.fetchData(),t.unsubscribe(!1),t.subscribe(t.newName)},function(e){t.renameError=e.message})},t.prototype.hasUnsavedChanges=function(){return this.savedConfigComments()!==this.configComments||this.savedConfigFinishedEditing()!==this.configFinishedEditing},t.prototype.savedConfigComments=function(){return n.i(o.a)(this.database)},t.prototype.savedConfigFinishedEditing=function(){return n.i(r.a)(this.database)},t.prototype.downloadTarget=function(t){return this.projectDataService.getDownloadTarget(this.database.name,t)},t.prototype.downloadOptions=function(t){return Object.keys(this.downloadTarget(t).options)},t.prototype.transformCommitMessage=function(t){var e="EMU-webApp auto save commit; ";if(t.substr(0,e.length)===e){var n=t.match(/User: ([^;]*);.*Bundle: (.*)/);if(3===n.length)return"Bundle "+n[2]+" edited by "+n[1]}return t},t.prototype.round=function(t,e){var n=Math.pow(10,e),a=t*n,s=Math.round(a);return s/n},t.prototype.displaySize=function(t){return t>Math.pow(1024,3)?this.round(t/Math.pow(1024,3),1)+" GiB":t>Math.pow(1024,2)?this.round(t/Math.pow(1024,2),1)+" MiB":t>1024?this.round(t/1024,1)+"KiB":t+" B"},t=l([n.i(a.G)({selector:"emudbmanager-database-detail",template:n(756),styles:[n(740)]}),c("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object,"function"==typeof(u="undefined"!=typeof i.b&&i.b)&&u||Object])],t);var e,u}()},369:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(91);n.d(e,"a",function(){return l});var o=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},l=function(){function t(t,e){this.projectDataService=t,this.router=e,this.bundleLists=[],this.databases=[],this.uploads=[]}return t.prototype.ngOnInit=function(){var t=this;this.subBundleLists=this.projectDataService.getAllBundleLists().subscribe(function(e){t.bundleLists=e}),this.subDatabases=this.projectDataService.getAllDatabases().subscribe(function(e){t.databases=e}),this.subUploads=this.projectDataService.getAllUploads().subscribe(function(e){t.uploads=e})},t.prototype.ngOnDestroy=function(){this.subBundleLists&&this.subBundleLists.unsubscribe(),this.subDatabases&&this.subDatabases.unsubscribe(),this.subUploads&&this.subUploads.unsubscribe()},t.prototype.logout=function(){this.projectDataService.logout(),this.router.navigate(["/"])},t=o([n.i(a.G)({selector:"emudbmanager-project",template:n(758),styles:[n(742)]}),r("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object,"function"==typeof(l="undefined"!=typeof i.a&&i.a)&&l||Object])],t);var e,l}()},370:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(91),o=n(243);n.d(e,"a",function(){return c});var r=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},l=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},c=function(){function t(t,e,n){this.projectDataService=t,this.route=e,this.router=n,this.databaseList=[],this.deleteError="",this.duplicateName=!1,this.fastForwardForm={messageError:"",messageSuccess:""},this.reallyDelete=!1,this.saveForm={newName:"",messageError:"",messageSuccess:""},this.state="Save",this.tableFormat=[{type:"string",heading:"Name",value:function(t){return t.name}},{type:"string",heading:"Bundles",value:function(t){return t.bundles.length}}]}return t.prototype.ngOnInit=function(){var t=this;this.subParams=this.route.params.subscribe(function(e){t.subUpload=t.projectDataService.getUpload(e.uuid).subscribe(function(e){t.upload=e,t.subDatabase&&t.subDatabase.unsubscribe(),t.subDatabase=t.projectDataService.getDatabase(t.upload.name).subscribe(function(e){null===e?t.duplicateName=!1:t.duplicateName=!0})})}),this.subDatabaseList=this.projectDataService.getAllDatabases().subscribe(function(e){t.databaseList=e})},t.prototype.ngOnDestroy=function(){this.subDatabase&&this.subDatabase.unsubscribe(),this.subDatabaseList&&this.subDatabaseList.unsubscribe(),this.subParams&&this.subParams.unsubscribe(),this.subUpload&&this.subUpload.unsubscribe()},t.prototype.deleteUpload=function(){var t=this;this.reallyDelete=!1,this.projectDataService.deleteUpload(this.upload.uuid).subscribe(function(e){t.projectDataService.fetchData(),t.subUpload&&t.subUpload.unsubscribe(),t.router.navigate(["/project/uploads"])},function(e){t.deleteError=e.message})},t.prototype.saveUpload=function(){var t=this;this.saveForm.messageSuccess="",this.saveForm.messageError="";var e;e=this.duplicateName?this.saveForm.newName:this.upload.name,this.projectDataService.saveUpload(this.upload.uuid,e).subscribe(function(e){t.projectDataService.fetchData(),t.saveForm.messageSuccess="The database has been saved."},function(e){t.saveForm.messageError=e.message,console.log(e)})},t.prototype.fastForward=function(){var t=this;this.fastForwardForm.messageSuccess="",this.fastForwardForm.messageError="",this.projectDataService.fastForward(this.upload.uuid,this.upload.name).subscribe(function(e){t.projectDataService.fetchData(),t.fastForwardForm.messageSuccess="Database has been fast-forwarded. You can now delete this upload."},function(e){t.fastForwardForm.messageError=e.message,console.log(e)})},t.prototype.countBundles=function(){if(this.upload)return n.i(o.a)(this.upload.sessions)},t=r([n.i(a.G)({selector:"emudbmanager-upload-detail",template:n(759),styles:[n(743)]}),l("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object,"function"==typeof(c="undefined"!=typeof i.b&&i.b)&&c||Object,"function"==typeof(u="undefined"!=typeof i.a&&i.a)&&u||Object])],t);var e,c,u}()},371:function(t,e,n){"use strict";var a=n(1),s=n(26);n.d(e,"a",function(){return r});var i=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=function(){function t(t){this.projectDataService=t,this.state="Overview",this.uploads=[]}return t.prototype.ngOnInit=function(){var t=this;this.subUploads=this.projectDataService.getAllUploads().subscribe(function(e){t.uploads=e})},t.prototype.ngOnDestroy=function(){this.subUploads&&this.subUploads.unsubscribe()},t=i([n.i(a.G)({selector:"emudbmanager-uploads-dashboard",template:n(761),styles:[n(745)]}),o("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},372:function(t,e,n){"use strict";var a=n(1),s=n(91),i=n(26);n.d(e,"a",function(){return l});var o=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},l=function(){function t(t,e){this.projectDataService=t,this.router=e,this.loginFailed=!1,this.unknownError=!1,this.unknownErrorMessage=""}return t.prototype.ngOnInit=function(){},t.prototype.checkLogin=function(){var t=this;this.loginFailed=!1,this.unknownError=!1,this.sub||(this.sub=this.projectDataService.login(this.username,this.password).subscribe(function(e){t.router.navigate(["/project/overview"])},function(e){"BAD_LOGIN"===e.data?t.loginFailed=!0:(t.unknownError=!0,t.unknownErrorMessage=e.message),t.sub=null},function(){t.sub=null}))},t=o([n.i(a.G)({selector:"emudbmanager-welcome",template:n(763),styles:[n(747)]}),r("design:paramtypes",["function"==typeof(e="undefined"!=typeof i.a&&i.a)&&e||Object,"function"==typeof(l="undefined"!=typeof s.a&&s.a)&&l||Object])],t);var e,l}()},444:function(t,e){function n(t){throw new Error("Cannot find module '"+t+"'.")}n.keys=function(){return[]},n.resolve=n,t.exports=n,n.id=444},445:function(t,e,n){"use strict";var a=n(579),s=(n.n(a),n(536)),i=n(1),o=n(578),r=n(567);o.a.production&&n.i(i._40)(),n.i(s.a)().bootstrapModule(r.a)},566:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(577);n.n(i);n.d(e,"a",function(){return l});var o=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},l=function(){function t(t){this.projectDataService=t,this.activeAppendix="",this.nextActiveAppendix=""}return t.prototype.changeState=function(t){this.nextActiveAppendix+="."},t.prototype.ngAfterViewInit=function(){this.activeAppendix=this.nextActiveAppendix},t.prototype.progressBarState=function(){return 0===this.projectDataService.connectionCount?(this.activeAppendix="",this.nextActiveAppendix="","idle"):"active"+this.activeAppendix},t=o([n.i(a.G)({selector:"emudbmanager-root",template:n(749),styles:[n(733)],animations:[n.i(a._3)("progressBar",[n.i(a._5)("* => *",[n.i(a._7)(8e3,n.i(a._8)([n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({
"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"}),n.i(a._6)({"background-position":"40px 0"}),n.i(a._6)({"background-position":"0 0"})]))])]),n.i(a._3)("progressBarContainer",[n.i(a._4)("idle",n.i(a._6)({height:0})),n.i(a._5)("* <=> idle",n.i(a._7)("300ms"))])]}),r("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},567:function(t,e,n){"use strict";var a=n(1),s=n(167),i=n(566),o=n(527),r=n(337),l=n(91),c=n(568),u=n(26),d=n(369),p=n(372),b=n(575),f=n(576),h=n(572),m=n(573),g=n(367),v=n(366),y=n(368),w=n(365),D=n(364),S=n(370),j=n(371),E=n(565),L=n(571);n.d(e,"a",function(){return O});var C=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},k=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},O=function(){function t(){}return t=C([n.i(a.I)({declarations:[i.a,D.a,w.a,h.a,v.a,g.a,y.a,m.a,L.a,d.a,S.a,b.a,j.a,f.a,p.a,E.a],imports:[s.b,o.a,r.d,l.c.forRoot(c.a)],bootstrap:[i.a],providers:[u.a]}),k("design:paramtypes",[])],t)}()},568:function(t,e,n){"use strict";var a=n(574),s=n(372);n.d(e,"a",function(){return i});var i=a.a.concat([{path:"",redirectTo:"/login",pathMatch:"full"},{path:"login",component:s.a},{path:"**",component:s.a}])},569:function(t,e,n){"use strict";function a(t,e,n,a,s,i){if(a.length<s)return"Invalid parameters.";for(var o=0;o<a.length;++o)for(var r=0;r<t.bundleLists.length;++r)if(a[o]===t.bundleLists[r].name&&""===t.bundleLists[r].archiveLabel)return"Editor already has a non-archived bundle list: "+a[o];for(var l=new RegExp(e),c=new RegExp(n),u=[],o=0;o<t.sessions.length;++o)if(l.test(t.sessions[o].name))for(var r=0;r<t.sessions[o].bundles.length;++r)c.test(t.sessions[o].bundles[r])&&u.push({session:t.sessions[o].name,name:t.sessions[o].bundles[r],comment:"",finishedEditing:!1});for(var d=[],o=0;o<a.length;++o)d.push({name:a[o],archiveLabel:"",items:[]});for(var p=-1,o=0;o<u.length;++o)for(var r=0;r<s;++r)p+=1,p>=a.length&&(p=0),d[p].items.push(u[o]);return d}e.a=a},570:function(t,e,n){"use strict";function a(t){for(var e,n,a=[],s=0;s<t.length;++s){var i=t[s].date,o=i.substring(0,7),r=i.substring(0,10),l=i.substring(11);o!==e&&a.push({month:o,open:!1,days:[]}),e=o;var c=a[a.length-1];r!==n&&c.days.push({day:r,open:!1,commits:[]}),n=r;var u=c.days[c.days.length-1];u.commits.push({commitID:t[s].commitID,dateTime:l,message:t[s].message,tagLabel:""})}return a}e.a=a},571:function(t,e,n){"use strict";var a=n(1);n.d(e,"a",function(){return o});var s=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},i=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},o=function(){function t(){this.reverseSort=!1,this.visibleCount=0}return Object.defineProperty(t.prototype,"data",{get:function(){return this._data},set:function(t){Array.isArray(t)?this._data=t:this._data=[]},enumerable:!0,configurable:!0}),t.prototype.getVisibleData=function(){for(var t=this,e=[],n=0;n<this.data.length;++n){for(var a=!0,s=0;s<this.columns.length;++s)if("undefined"!=typeof this.columns[s].filter){if("string"===this.columns[s].type){var i=void 0;try{i=new RegExp(this.columns[s].filter)}catch(t){continue}var o=this.columns[s].value(this.data[n]).toString();if(null===o.match(i)){a=!1;break}}if("boolean"===this.columns[s].type){var r=this.columns[s].filter;if("boolean"!=typeof r)continue;if(this.columns[s].value(this.data[n])!==r){a=!1;break}}}a&&e.push(this.data[n])}return this.visibleCount=e.length,this.sortColumn&&e.sort(function(e,n){return t.sortColumn.value(e)>t.sortColumn.value(n)?t.reverseSort?-1:1:t.sortColumn.value(e)==t.sortColumn.value(n)?0:t.reverseSort?1:-1}),e},t.prototype.ngOnInit=function(){},t.prototype.isBoolean=function(t){return"boolean"==typeof t},t.prototype.percentage=function(){return 0===this.data.length?0:Math.round(100*this.visibleCount/this.data.length)},t.prototype.sort=function(t){this.sortColumn===t?this.reverseSort=!this.reverseSort:(this.sortColumn=t,this.reverseSort=!1)},s([n.i(a.B)(),i("design:type",Array)],t.prototype,"columns",void 0),s([n.i(a.B)(),i("design:type",Object)],t.prototype,"data",null),t=s([n.i(a.G)({selector:"emudbmanager-table",template:n(750),styles:[n(734)]}),i("design:paramtypes",[])],t)}()},572:function(t,e,n){"use strict";var a=n(1),s=n(26);n.d(e,"a",function(){return r});var i=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=function(){function t(t){this.projectDataService=t,this.databases=[]}return Object.defineProperty(t.prototype,"database",{get:function(){return this._database},set:function(t){var e=this;this._database=t,this.sub&&(this.sub.unsubscribe(),this.sub.unsubscribe()),this.database?this.sub=this.projectDataService.getDatabase(this.database).subscribe(function(t){e.databases=[t]}):this.sub=this.projectDataService.getAllDatabases().subscribe(function(t){e.databases=t})},enumerable:!0,configurable:!0}),t.prototype.ngOnDestroy=function(){this.sub&&this.sub.unsubscribe()},t.prototype.countFinishedItems=function(t){return t.items.reduce(function(t,e,n,a){return e.finishedEditing?t+1:t},0)},t.prototype.countCommentedItems=function(t){return t.items.reduce(function(t,e,n,a){return""!==e.comment?t+1:t},0)},t.prototype.percentageFinishedItems=function(t){return 0===t.items.length?0:Math.round(100*this.countFinishedItems(t)/t.items.length)},t.prototype.percentageCommentedItems=function(t){return 0===t.items.length?0:Math.round(100*this.countCommentedItems(t)/t.items.length)},i([n.i(a.B)(),o("design:type",String)],t.prototype,"database",null),t=i([n.i(a.G)({selector:"emudbmanager-bundle-lists-overview",template:n(753),styles:[n(737)]}),o("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},573:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(243);n.d(e,"a",function(){return l});var o=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},l=function(){function t(t){this.projectDataService=t,this.countBundles=i.a}return t.prototype.ngOnInit=function(){var t=this;this.sub=this.projectDataService.getAllDatabases().subscribe(function(e){t.databases=e})},t.prototype.ngOnDestroy=function(){this.sub&&this.sub.unsubscribe()},t=o([n.i(a.G)({selector:"emudbmanager-databases-overview",template:n(757),styles:[n(741)]}),r("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},574:function(t,e,n){"use strict";var a=n(367),s=n(366),i=n(369),o=n(368),r=n(365),l=n(371),c=n(364),u=n(370);n.d(e,"a",function(){return d});var d=[{path:"project",component:i.a,children:[{path:"overview",component:s.a},{path:"databases",component:a.a},{path:"databases/:name",component:o.a},{path:"bundle-lists",component:r.a},{path:"bundle-lists/:database/:name",component:c.a},{path:"bundle-lists/:database/:name/:archiveLabel",component:c.a},{path:"uploads",component:l.a},{path:"uploads/:uuid",component:u.a},{path:"progress",component:s.a}]}]},575:function(t,e,n){"use strict";var a=n(1),s=n(26);n.d(e,"a",function(){return r});var i=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},o=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=function(){function t(t){this.projectDataService=t,this.errorMessage="",this.options={data:{user:"",password:"",query:""},url:""},this.successMessage="",this.transferMessage="",this.uploadProgress=0,this.zone=new a._26({enableLongStackTrace:!1});var e=this.projectDataService.getUploadTarget();this.options.url=e.url,this.options.data=e.params}return t.prototype.handleProgress=function(t){var e=this;if(this.zone.run(function(){e.uploadProgress=t.progress.percent,t.progress.loaded===t.progress.total&&(e.transferMessage="Upload complete. Please wait while the server extracts the contents of the zip file (no progress indicator is available for this) …")}),t.abort)this.errorMessage="Upload was aborted.";else if(t.error)this.errorMessage="Unknown error during upload.";else if(t.done){this.projectDataService.fetchData();var n=JSON.parse(t.response);n.success===!0?this.successMessage="The server has finished processing the upload. It has been saved under the UUID "+n.data+".":this.errorMessage=n.message}},t=i([n.i(a.G)({selector:"emudbmanager-upload-form",template:n(760),styles:[n(744)]}),o("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},576:function(t,e,n){"use strict";var a=n(1),s=n(26),i=n(243);n.d(e,"a",function(){return l});var o=this&&this.__decorate||function(t,e,n,a){var s,i=arguments.length,o=i<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,a);else for(var r=t.length-1;r>=0;r--)(s=t[r])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},l=function(){function t(t){this.projectDataService=t,this.countBundles=i.a}return t.prototype.ngOnInit=function(){var t=this;this.subUploads=this.projectDataService.getAllUploads().subscribe(function(e){t.uploads=e})},t.prototype.ngOnDestroy=function(){this.subUploads&&this.subUploads.unsubscribe()},t=o([n.i(a.G)({selector:"emudbmanager-uploads-overview",template:n(762),styles:[n(746)]}),r("design:paramtypes",["function"==typeof(e="undefined"!=typeof s.a&&s.a)&&e||Object])],t);var e}()},577:function(t,e,n){"use strict";var a=n(414),s=(n.n(a),n(415)),i=(n.n(s),n(416)),o=(n.n(i),n(417));n.n(o)},578:function(t,e,n){"use strict";n.d(e,"a",function(){return a});var a={production:!0}},579:function(t,e,n){"use strict";var a=n(593),s=(n.n(a),n(586)),i=(n.n(s),n(582)),o=(n.n(i),n(588)),r=(n.n(o),n(587)),l=(n.n(r),n(585)),c=(n.n(l),n(584)),u=(n.n(c),n(592)),d=(n.n(u),n(581)),p=(n.n(d),n(580)),b=(n.n(p),n(590)),f=(n.n(b),n(583)),h=(n.n(f),n(591)),m=(n.n(h),n(589)),g=(n.n(m),n(594)),v=(n.n(g),n(1028));n.n(v)},733:function(t,e){t.exports=".head-container{\n    padding-top:50px;\n}\n\n.sub-header{\n    padding-bottom:10px;\n    border-bottom:1px solid #eee;\n}\n.navbar-fixed-top{\n    border:0;\n}\n\n.navbar-brand-image{\n    padding:9px 15px;\n}\n\n.progress-bar{\n    font-weight:bold;\n    width:100%;\n}\n\n.progress{\n    margin:0;\n}"},734:function(t,e){t.exports=":host{\n    display:table;\n}"},735:function(t,e){t.exports=""},736:function(t,e){t.exports="label{\n    font-weight:normal;\n}"},737:function(t,e){t.exports="td{\n\tvertical-align:middle !important;\n}\n"},738:function(t,e){t.exports=""},739:function(t,e){t.exports=""},740:function(t,e){t.exports="ul{\n    list-style-type:none;\n}\n\nform{\n    display:inline;\n}"},741:function(t,e){t.exports="table ul{\n\tpadding-left:0;\n\tlist-style-position:inside;\n}\n\ntd{\n\tvertical-align:middle !important;\n}\n"},742:function(t,e){t.exports="@media (min-width: 768px){\n\t.sidebar{\n\t\tposition:fixed;\n\t\ttop:51px;\n\t\tbottom:0;\n\t\tleft:0;\n\t\tz-index:1000;\n\t\tdisplay:block;\n\t\tpadding:20px;\n\t\toverflow-x:hidden;\n\t\toverflow-y:auto;\n\t\tbackground-color:#f5f5f5;\n\t\tborder-right:1px solid #eee;\n\t}\n\n\t.nav-sidebar{\n\t\tmargin-right:-21px;\n\t\tmargin-bottom:20px;\n\t\tmargin-left:-20px;\n\t}\n\n\t.nav-sidebar > li > a{\n\t\tpadding-right:20px;\n\t\tpadding-left:20px;\n\t}\n}\n\n.nav-sidebar > .active > a,\n.nav-sidebar > .active > a:hover,\n.nav-sidebar > .active > a:focus{\n\tcolor:#fff;\n\tbackground-color:#428bca;\n}\n\n#navbar{\n\tmargin:0;\n\tpadding:0;\n}\n\n.main{\n\tpadding:20px;\n}\n\n@media (min-width: 768px){\n\t.main{\n\t\tpadding-right:40px;\n\t\tpadding-left:40px;\n\t}\n}\n\n.main .page-header{\n\tmargin-top:0;\n}\n\n.placeholders{\n\tmargin-bottom:30px;\n\ttext-align:center;\n}\n\n.placeholders h4{\n\tmargin-bottom:0;\n}\n\n.placeholder{\n\tmargin-bottom:20px;\n}\n\n.placeholder img{\n\tdisplay:inline-block;\n\tborder-radius:50%;\n}\n"},743:function(t,e){t.exports=""},744:function(t,e){t.exports=".progress-bar{\n    min-width:3em;\n}\n\ninput[type=file]{\n    display:none;\n}\n"},745:function(t,e){t.exports=""},746:function(t,e){t.exports=""},747:function(t,e){t.exports=":host{\n\ttext-align:center;\n}\n\n.panel{\n\tmargin-left:20px;\n\tmargin-right:20px;\n}\n\n@media (min-width: 768px){\n\t.panel{\n\t\twidth:50%;\n\t\tmargin-left:auto;\n\t\tmargin-right:auto;\n\t}\n}\n\n.panel-primary .panel-body{\n\ttext-align:left;\n}\n\n.alert .glyphicon{\n\tcursor:pointer;\n}\n"},749:function(t,e){t.exports='<div class="head-container">\n\t<nav class="navbar navbar-inverse navbar-fixed-top">\n\t\t<div class="container-fluid">\n\t\t\t<div class="navbar-header">\n\t\t\t\t<button type="button" class="navbar-toggle collapsed" data-toggle="collapse"\n\t\t\t\t        data-target=".navbar-collapse" aria-expanded="false" aria-controls="navbar">\n\t\t\t\t\t<span class="sr-only">Toggle navigation</span>\n\t\t\t\t\t<span class="icon-bar"></span>\n\t\t\t\t\t<span class="icon-bar"></span>\n\t\t\t\t\t<span class="icon-bar"></span>\n\t\t\t\t</button>\n\n\t\t\t\t<span class="navbar-brand navbar-brand-image">\n\t\t\t\t\t<img src="assets/emu-icon-32.png">\n\t\t\t\t</span>\n\t\t\t\t<span class="navbar-brand">emuDB Manager</span>\n\t\t\t</div>\n\t\t\t<div id="" class="navbar-collapse collapse">\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class="progress" [@progressBarContainer]="progressBarState()">\n\t\t\t<div class="progress-bar progress-bar-striped" role="progressbar"\n\t\t\t     [@progressBar]="progressBarState()"\n\t\t\t     (@progressBar.start)="changeState($event)"\n\t\t\t>\n\t\t\t\tCommunicating with server\n\t\t\t</div>\n\t\t</div>\n\t</nav>\n\n\t<router-outlet></router-outlet>\n</div>\n'},750:function(t,e){t.exports='<thead>\n<tr>\n\t<th *ngFor="let column of columns" (click)="sort(column)">\n\t\t{{column.heading}}\n\n\t\t<template [ngIf]="sortColumn === column">\n\t\t\t<span *ngIf="!reverseSort" class="glyphicon glyphicon-triangle-top"></span>\n\t\t\t<span *ngIf="reverseSort" class="glyphicon glyphicon-triangle-bottom"></span>\n\t\t</template>\n\t</th>\n</tr>\n<tr>\n\t<td *ngFor="let column of columns">\n\t\t<template [ngIf]="column.type === \'string\'">\n\t\t\t<input class="form-control" placeholder="Filter" [(ngModel)]="column.filter">\n\t\t</template>\n\n\t\t<template [ngIf]="column.type === \'boolean\'">\n\t\t\t<button class="btn btn-default" (click)="column.filter = undefined"\n\t\t\t        [ngClass]="{active: !isBoolean(column.filter)}">\n\t\t\t\tall\n\t\t\t</button>\n\n\t\t\t<button class="btn btn-default" (click)="column.filter = true"\n\t\t\t        [ngClass]="{active: column.filter === true}">\n\t\t\t\t<span class="glyphicon glyphicon-ok"></span>\n\t\t\t</button>\n\n\t\t\t<button class="btn btn-default" (click)="column.filter = false"\n\t\t\t        [ngClass]="{active: column.filter === false}">\n\t\t\t\t<span class="glyphicon glyphicon-remove"></span>\n\t\t\t</button>\n\t\t</template>\n\t</td>\n</tr>\n<tr>\n\t<th [attr.colspan]="columns.length">\n\t\tViewing {{visibleCount}} of {{data.length}} items\n\t\t({{percentage()}} %)\n\t\t<span class="pull-right">\n\t\t\tClick headings to sort\n\t\t\t|\n\t\t\t<span (click)="sort(undefined)">Remove sorting</span>\n\t\t</span>\n\t</th>\n</tr>\n</thead>\n\n<tbody>\n<tr *ngFor="let item of getVisibleData()">\n\t<td *ngFor="let column of columns">\n\t\t<template [ngIf]="column.type === \'string\'">\n\t\t\t{{column.value(item)}}\n\t\t</template>\n\n\t\t<template [ngIf]="column.type === \'boolean\'">\n\t\t\t<span *ngIf="column.value(item)" class="glyphicon glyphicon-ok"></span>\n\t\t\t<span *ngIf="!column.value(item)" class="glyphicon glyphicon-remove"></span>\n\t\t</template>\n\t</td>\n</tr>\n</tbody>'},751:function(t,e){t.exports='<h1 class="page-header">Individual bundle list</h1>\n\n<div class="panel panel-default">\n\n\t<ul class="panel-body nav nav-pills nav-justified">\n\t\t<li role="presentation" [ngClass]="{active: state === \'Info\'}">\n\t\t\t<a (click)="state = \'Info\'">\n\t\t\t\tInfo\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'CommentedBundles\'}">\n\t\t\t<a (click)="state = \'CommentedBundles\'">\n\t\t\t\tCommented bundles <span class="badge">{{commentedBundles?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'AllBundles\'}">\n\t\t\t<a (click)="state = \'AllBundles\'">\n\t\t\t\tAll bundles <span class="badge">{{allBundles?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n\n\t<div *ngIf="state === \'Info\'">\n\t\t<form (ngSubmit)="saveEditedInfo()">\n\t\t\t<div class="table-responsive">\n\t\t\t\t<table class="table table-striped">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Database</td>\n\t\t\t\t\t\t<td><a [routerLink]="[\'/project/databases\', database]">{{database}}</a></td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Editor</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span *ngIf="!infoEditor.isEditing">{{bundleList?.name}}</span>\n\t\t\t\t\t\t\t<input *ngIf="infoEditor.isEditing" class="form-control"\n\t\t\t\t\t\t\t       placeholder="New name"\n\t\t\t\t\t\t\t       [(ngModel)]="infoEditor.newName"\n\t\t\t\t\t\t\t       name="newName">\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Archive label</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span *ngIf="!infoEditor.isEditing">{{bundleList?.archiveLabel}}</span>\n\t\t\t\t\t\t\t<input *ngIf="infoEditor.isEditing" class="form-control"\n\t\t\t\t\t\t\t       placeholder="New archive label"\n\t\t\t\t\t\t\t       [(ngModel)]="infoEditor.newArchiveLabel"\n\t\t\t\t\t\t\t       name="newArchiveLabel">\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\n\t\t\t<div class="panel-body">\n\t\t\t\t<p>\n\t\t\t\t\t<button type="button" class="btn btn-default" (click)="toggleEditInfo()"\n\t\t\t\t\t        [ngClass]="{active: infoEditor.isEditing}">\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button *ngIf="infoEditor.isEditing" type="submit"\n\t\t\t\t\t        class="btn btn-success pull-right">\n\t\t\t\t\t\tSave\n\t\t\t\t\t</button>\n\t\t\t\t</p>\n\n\t\t\t\t<p *ngIf="infoEditor.messageSuccess" class="alert alert-success">\n\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t        (click)="infoEditor.messageSuccess = \'\'">\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{{infoEditor.messageSuccess}}\n\t\t\t\t</p>\n\n\t\t\t\t<p *ngIf="infoEditor.messageError" class="alert alert-danger">\n\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t        (click)="infoEditor.messageError = \'\'">\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{{infoEditor.messageError}}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</form>\n\n\t\t<hr>\n\n\t\t<div class="panel-body">\n\t\t\t<p>\n\t\t\t\tBundle lists can be duplicated. The copy will be assigned to a different editor but\n\t\t\t\tit will share the same comments. All “finished editing” ticks will be reset.\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\tThis is useful to review the comments in the EMU-webApp, along with the signal and\n\t\t\t\tannotation data.\n\t\t\t</p>\n\n\t\t\t<form (ngSubmit)="duplicateBundleList()">\n\t\t\t\t<p>\n\t\t\t\t\t<input class="form-control" placeholder="Choose editor for duplicate"\n\t\t\t\t\t       [(ngModel)]="duplicationEditor.editorName" name="editorName">\n\t\t\t\t</p>\n\n\t\t\t\t<div class="checkbox">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="duplicationEditor.commentedOnly"\n\t\t\t\t\t\t       name="commentedOnly">\n\t\t\t\t\t\tOnly duplicate commented bundles\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\n\t\t\t\t<p *ngIf="duplicationEditor.messageError" class="alert alert-danger">\n\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t        (click)="duplicationEditor.messageError = \'\'">\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{{duplicationEditor.messageError}}\n\t\t\t\t</p>\n\n\t\t\t\t<p *ngIf="duplicationEditor.messageSuccess" class="alert alert-success">\n\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t        (click)="duplicationEditor.messageSuccess = \'\'">\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{{duplicationEditor.messageSuccess}}\n\t\t\t\t</p>\n\n\n\t\t\t\t<p>\n\t\t\t\t\t<button class="btn btn-primary" [disabled]="!duplicationEditor.editorName">\n\t\t\t\t\t\tDuplicate\n\t\t\t\t\t</button>\n\t\t\t\t</p>\n\t\t\t</form>\n\t\t</div>\n\n\t\t<hr>\n\n\t\t<div class="panel-body">\n\t\t\t<div class="checkbox">\n\t\t\t\t<label>\n\t\t\t\t\t<input type="checkbox" [(ngModel)]="reallyDelete">\n\t\t\t\t\tDelete this bundle list? This is irreversible!\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<p *ngIf="deleteError" class="alert alert-danger">\n\t\t\t\t<button type="button" class="close" aria-label="Close" (click)="deleteError = \'\'">\n\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t</button>\n\n\t\t\t\t{{deleteError}}\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<button type="button" class="btn btn-danger" [disabled]="!reallyDelete"\n\t\t\t\t        (click)="deleteBundleList()">\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</p>\n\n\t\t</div>\n\t</div>\n\n\t<div *ngIf="state === \'CommentedBundles\'" class="table-responsive">\n\t\t<emudbmanager-table class="table table-striped"\n\t\t                    [columns]="tableFormat" [data]="commentedBundles">\n\t\t</emudbmanager-table>\n\t</div>\n\n\t<div *ngIf="state === \'AllBundles\'" class="table-responsive">\n\t\t<emudbmanager-table class="table table-striped"\n\t\t                    [columns]="tableFormat" [data]="allBundles">\n\t\t</emudbmanager-table>\n\t</div>\n</div>\n'},752:function(t,e){t.exports='<h1 class="page-header">Bundle lists</h1>\n\n<div class="panel panel-default">\n\n\t<ul class="panel-body nav nav-pills nav-justified">\n\t\t<li role="presentation" [ngClass]="{active: state === \'Overview\'}">\n\t\t\t<a (click)="state = \'Overview\'">\n\t\t\t\tExisting bundle lists <span class="badge">{{bundleLists?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Generator\'}">\n\t\t\t<a (click)="state = \'Generator\'">\n\t\t\t\tGenerate bundle list\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n\n\t<emudbmanager-bundle-lists-overview *ngIf="state === \'Overview\'" database="">\n\n\t</emudbmanager-bundle-lists-overview>\n\n\t<div *ngIf="state === \'Generator\'" class="panel-body">\n\t\t<form class="container-fluid">\n\t\t\t<div class="row">\n\t\t\t\t<p class="col-md-4">\n\t\t\t\t\tSelect the database for which to generate a bundle list:\n\t\t\t\t</p>\n\n\t\t\t\t<div class="col-md-8">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<select class="form-control" [(ngModel)]="selectedDatabase"\n\t\t\t\t\t\t        [ngModelOptions]="{standalone: true}">\n\t\t\t\t\t\t\t<option *ngFor="let database of databases" [ngValue]="database">\n\t\t\t\t\t\t\t\t{{database.name}}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p class="alert alert-warning" *ngIf="selectedDatabase && !checkDBConfig()">\n\t\t\t\t\t\tThe selected database {{selectedDatabase?.name}} is not configured to\n\t\t\t\t\t\tallow bundle comments and “finished editing” checkboxes. Please review\n\t\t\t\t\t\tthe database configuration.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<hr>\n\n\t\t\t<div class="row">\n\t\t\t\t<p class="col-md-4">\n\t\t\t\t\tWhat bundles from what sessions shall be included?\n\t\t\t\t</p>\n\n\t\t\t\t<p class="col-md-2">\n\t\t\t\t\tBundle pattern:\n\t\t\t\t</p>\n\n\t\t\t\t<p class="col-md-6">\n\t\t\t\t\t<input [ngModelOptions]="{standalone: true}" [(ngModel)]="bundlePattern"\n\t\t\t\t\t       class="form-control">\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div class="row">\n\t\t\t\t<p class="col-md-4">\n\t\t\t\t</p>\n\n\t\t\t\t<p class="col-md-2">\n\t\t\t\t\tSession pattern:\n\t\t\t\t</p>\n\n\t\t\t\t<p class="col-md-6">\n\t\t\t\t\t<input [ngModelOptions]="{standalone: true}" [(ngModel)]="sessionPattern"\n\t\t\t\t\t       class="form-control">\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<hr>\n\n\t\t\t<div class="row">\n\t\t\t\t<p class="col-md-4">\n\t\t\t\t\tWho are the editors? (one name per line)\n\t\t\t\t</p>\n\n\t\t\t\t<div class="col-md-8">\n\t\t\t\t\t<p *ngFor="let editor of editors let i=index">\n\t\t\t\t\t\t<input [(ngModel)]="editor.name" class="form-control"\n\t\t\t\t\t\t       [ngModelOptions]="{standalone: true}" (change)="checkEditor(i)">\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input [ngModelOptions]="{standalone: true}" [(ngModel)]="newEditor"\n\t\t\t\t\t\t       (change)="addEditor()" class="form-control">\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<hr>\n\n\t\t\t<div class="row">\n\t\t\t\t<p class="col-md-4">\n\t\t\t\t\tIn case you have multiple editors:\n\t\t\t\t</p>\n\n\t\t\t\t<div class="col-md-4">\n\n\t\t\t\t\t<p>How many persons shall be assigned to each bundle?</p>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input [ngModelOptions]="{standalone: true}" [(ngModel)]="personsPerBundle"\n\t\t\t\t\t\t       type="number" class="form-control" min="1" [max]="editors.length">\n\t\t\t\t\t</p>\n\n\n\t\t\t\t</div>\n\n\t\t\t\t<div class="col-md-4">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tShall the bundles be shuffled before distributing them among the editors?\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="shuffle"\n\t\t\t\t\t\t\t       [ngModelOptions]="{standalone: true}" disabled>\n\t\t\t\t\t\t\tShuffle (NOT YET IMPLEMENTED)\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t\t<hr>\n\n\t\t\t<div class="row">\n\t\t\t\t<div class="col-md-12">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<button type="button" class="btn btn-default"\n\t\t\t\t\t\t        (click)="generateLists()">\n\t\t\t\t\t\t\tGenerate\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p *ngIf="generatorSuccess" class="alert alert-success">\n\t\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t\t        (click)="generatorSuccess = \'\'">\n\t\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t{{generatorSuccess}}\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p *ngIf="generatorError" class="alert alert-danger">\n\t\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t\t        (click)="generatorError = \'\'">\n\t\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t{{generatorError}}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>\n'},753:function(t,e){t.exports='<div class="table-responsive">\n\t<table class="table table-striped">\n\t\t<thead>\n\t\t<tr>\n\t\t\t<th *ngIf="!database">Database</th>\n\t\t\t<th>Editor</th>\n\t\t\t<th>Archive label</th>\n\t\t\t<th>Bundles</th>\n\t\t\t<th>Finished</th>\n\t\t\t<th>Comments</th>\n\t\t\t<th>Actions</th>\n\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n\n\t\t<template ngFor let-db [ngForOf]="databases">\n\t\t\t<template ngFor let-bundleList [ngForOf]="db.bundleLists">\n\t\t\t\t<tr>\n\t\t\t\t\t<td *ngIf="!database"><a [routerLink]="[\'/project/databases\', db.name]">{{db.name}}</a>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{{bundleList.name}}</td>\n\t\t\t\t\t<td>{{bundleList.archiveLabel}}</td>\n\t\t\t\t\t<td>{{bundleList.items.length}}</td>\n\t\t\t\t\t<td>{{countFinishedItems(bundleList)}} ({{percentageFinishedItems(bundleList)}}\n\t\t\t\t\t\t%)\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{{countCommentedItems(bundleList)}}\n\t\t\t\t\t\t({{percentageCommentedItems(bundleList)}} %)\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t[routerLink]="[\'/project/bundle-lists\', db.name, bundleList.name, bundleList.archiveLabel]"\n\t\t\t\t\t\t\tclass="btn btn-default">\n\t\t\t\t\t\t\tView &amp; edit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</template>\n\t\t</template>\n\n\t\t</tbody>\n\t</table>\n</div>\n'},754:function(t,e){t.exports='<h1 class="page-header">Project overview</h1>\n\n<div class="panel panel-primary">\n\t<div class="panel-heading"><span class="panel-title">{{projectName}}</span></div>\n\n\t<table class="table table-striped">\n\t\t<tbody>\n\t\t<tr>\n\t\t\t<td>Number of databases</td>\n\t\t\t<td>{{databases.length}}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Number of bundle lists</td>\n\t\t\t<td>{{bundleLists.length}}</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>Number of uploads</td>\n\t\t\t<td>{{uploads.length}}</td>\n\t\t</tr>\n\t\t</tbody>\n\t</table>\n\n</div>\n'},755:function(t,e){t.exports='<h1 class="page-header">Databases <span class="badge">{{databases?.length}}</span></h1>\n\n<emudbmanager-databases-overview></emudbmanager-databases-overview>\n'},756:function(t,e){t.exports='<h1 class="page-header">Database: {{database?.name}}</h1>\n\n<p>\n\t<a class="btn btn-primary" [href]="webAppLink" target="_blank">EMU-webApp</a>\n</p>\n\n<hr>\n\n<p>\n\tURL to EMU-webApp: {{webAppLink}}\n</p>\n\n<hr>\n\n<div class="panel panel-default">\n\n\t<ul class="panel-body nav nav-pills nav-justified">\n\t\t<li role="presentation" [ngClass]="{active: state === \'BundleLists\'}">\n\t\t\t<a (click)="state = \'BundleLists\'">\n\t\t\t\tBundle lists <span class="badge">{{database?.bundleLists?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Sessions\'}">\n\t\t\t<a (click)="state = \'Sessions\'">\n\t\t\t\tSessions <span class="badge">{{database?.sessions?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Download\'}">\n\t\t\t<a (click)="state = \'Download\'">\n\t\t\t\tDownload + Version history\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Config\'}">\n\t\t\t<a (click)="state = \'Config\'">\n\t\t\t\tDatabase configuration\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Rename\'}">\n\t\t\t<a (click)="state = \'Rename\'">\n\t\t\t\tRename database\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n\n\n\t<emudbmanager-bundle-lists-overview *ngIf="state === \'BundleLists\'" [database]="database?.name">\n\t</emudbmanager-bundle-lists-overview>\n\n\n\t<div *ngIf="state === \'Sessions\'" class="table-responsive">\n\t\t<emudbmanager-table class="table table-striped"\n\t\t                    [columns]="tableFormat" [data]="database?.sessions">\n\t\t</emudbmanager-table>\n\t</div>\n\n\t<div *ngIf="state === \'Download\'" class="panel-body">\n\t\t<div class="alert alert-info">\n\t\t\t<p>\n\t\t\t\t<strong>\n\t\t\t\t\tWhile your team is editing the database, every change is recorded (using git).\n\t\t\t\t</strong>\n\t\t\t\tThis lets you go back to any previous version of your database. E.g., whenever you\n\t\t\t\tdelete or create a bundle list (in emuDB Manager), or when somebody changes the\n\t\t\t\tannotation of a bundle (in EMU-webApp), the current state of the database is\n\t\t\t\trecorded. This is called a <em>git commit</em>.\n\t\t\t</p>\n\n\t\t\t<hr>\n\n\t\t\t<p>\n\t\t\t\t<strong>\n\t\t\t\t\tDownloading the database is a two-step process.\n\t\t\t\t</strong>\n\t\t\t\tFirst, pick a version and prepare it for download. Second (a few minutes later), you\n\t\t\t\tcan grab the zip file.\n\t\t\t</p>\n\n\t\t\t<hr>\n\n\t\t\t<p>\n\t\t\t\t<strong>\n\t\t\t\t\tTags can be used to mark important versions of your database.\n\t\t\t\t</strong>\n\t\t\t\tIn the “all versions” view, you can select a version and “stick a tag to it”.\n\t\t\t\tThis way, you and your colleagues can easily find the version later. Technically,\n\t\t\t\tthis adds a <em>git tag</em> to your database.\n\t\t\t</p>\n\t\t</div>\n\n\t\t<hr>\n\n\t\t<h3 class="sub-header">\n\t\t\tVersions prepared for download <span class="badge">{{countDownloads()}}</span>\n\t\t</h3>\n\n\t\t<div class="table-responsive">\n\t\t\t<table class="table table-striped">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Version</th>\n\t\t\t\t\t<th>Date prepared for download</th>\n\t\t\t\t\t<th>Size (hover for exact size)</th>\n\t\t\t\t\t<th>Actions</th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\n\t\t\t\t<tbody>\n\t\t\t\t<tr *ngIf="createArchiveCurrent">\n\t\t\t\t\t<td colspan="3">\n\t\t\t\t\t\t<p class="alert alert-success">\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\tAnother version is currently being prepared for download.\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\tRefresh this page in a few minutes to see if the download is already\n\t\t\t\t\t\t\tavailable.<br>\n\n\t\t\t\t\t\t\t<strong>Whether this green hint stays or disappears</strong> does not\n\t\t\t\t\t\t\tindicate that the preparation process has finished. It may or may not\n\t\t\t\t\t\t\tcoincide.<br>\n\n\t\t\t\t\t\t\t<strong>Note also</strong> that in case the preparation process\n\t\t\t\t\t\t\tactually fails, you cannot, at this time, be notified of it\n\t\t\t\t\t\t\tautomatically. Check with the system administrator if the preparation\n\t\t\t\t\t\t\tseems to take too long (but 10 or 15 minutes are not unusual).\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr *ngFor="let download of downloadList">\n\t\t\t\t\t<td>\n\t\t\t\t\t\t{{download.treeish}}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{{download.date}}</td>\n\t\t\t\t\t<td [title]="download.size + \' B\'">{{displaySize(download.size)}}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<form method="post" [action]="downloadTarget(download.treeish).url"\n\t\t\t\t\t\t      target="_blank" ngNoForm>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t*ngFor="let option of downloadOptions(download.treeish)"\n\t\t\t\t\t\t\t\t\ttype="hidden"\n\t\t\t\t\t\t\t\t\tname="{{option}}"\n\t\t\t\t\t\t\t\t\tvalue="{{downloadTarget(download.treeish).options[option]}}"\n\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t<button class="btn btn-primary">\n\t\t\t\t\t\t\t\tDownload\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<p *ngIf="countDownloads() == 0">\n\t\t\t<em>No version of this database has been prepared for download so far.</em>\n\t\t</p>\n\n\t\t<button class="btn btn-primary btn-sm" (click)="createArchive(\'HEAD\')"\n\t\t        [disabled]="createArchiveCurrent">\n\t\t\t<span *ngIf="createArchiveCurrent === \'HEAD\'">Preparing</span>\n\t\t\t<span *ngIf="createArchiveCurrent !== \'HEAD\'">\n\t\t\t\tPrepare current version for download\n\t\t\t</span>\n\t\t</button>\n\n\t\t<hr>\n\n\t\t<h3 class="sub-header">\n\t\t\tTagged versions <span class="badge">{{countTags()}}</span>\n\t\t</h3>\n\n\t\t<p *ngIf="countTags() === 0">\n\t\t\t<em>No tagged versions so far. You can search a version and tag it below (in the all\n\t\t\t\tversions section).</em>\n\t\t</p>\n\n\t\t<div class="table-responsive">\n\t\t\t<table class="table table-striped">\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tag</th>\n\t\t\t\t\t<th>Actions</th>\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\n\t\t\t\t<tbody>\n\t\t\t\t<tr *ngFor="let tag of tagList">\n\t\t\t\t\t<td>{{tag}}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<button class="btn btn-primary btn-xs" (click)="createArchive(tag)"\n\t\t\t\t\t\t        [disabled]="createArchiveCurrent">\n\t\t\t\t\t\t\t<span *ngIf="createArchiveCurrent === tag">Preparing</span>\n\t\t\t\t\t\t\t<span *ngIf="createArchiveCurrent !== tag">\n\t\t\t\t\t\tPrepare for download\n\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\n\t\t<h3 class="sub-header">\n\t\t\tAll versions <span class="badge">{{countCommits()}}</span>\n\t\t</h3>\n\n\t\t<ul>\n\t\t\t<li *ngFor="let month of commitList">\n\t\t\t\t<a (click)="month.open = !month.open">\n\t\t\t\t\t<span [ngClass]="{\n\t\t\t\t\t\t\'glyphicon\': true,\n\t\t\t\t\t\t\'glyphicon-collapse-down\': !month.open,\n\t\t\t\t\t\t\'glyphicon-collapse-up\': month.open\n\t\t\t\t\t}"></span>\n\n\t\t\t\t\t{{month.month}}\n\t\t\t\t</a>\n\n\t\t\t\t<ul *ngIf="month.open">\n\t\t\t\t\t<li *ngFor="let day of month.days">\n\t\t\t\t\t\t<a (click)="day.open = !day.open">\n\t\t\t\t\t\t\t<span [ngClass]="{\n\t\t\t\t\t\t\t\t\'glyphicon\': true,\n\t\t\t\t\t\t\t\t\'glyphicon-collapse-down\': !day.open,\n\t\t\t\t\t\t\t\t\'glyphicon-collapse-up\': day.open\n\t\t\t\t\t\t\t}"></span>\n\n\t\t\t\t\t\t\t{{day.day}}\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<div class="table-responsive" *ngIf="day.open">\n\t\t\t\t\t\t\t<table class="table table-striped">\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Time</th>\n\t\t\t\t\t\t\t\t\t<th>Commit ID (hover for full ID)</th>\n\t\t\t\t\t\t\t\t\t<th>Commit description (hover for full description)</th>\n\t\t\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr *ngFor="let commit of day.commits">\n\t\t\t\t\t\t\t\t\t<td>{{commit.dateTime}}</td>\n\t\t\t\t\t\t\t\t\t<td [title]="commit.commitID">\n\t\t\t\t\t\t\t\t\t\t{{commit.commitID?.substr(0, 7)}}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td [title]="commit.message">\n\t\t\t\t\t\t\t\t\t\t{{transformCommitMessage(commit.message)}}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<button class="btn btn-primary btn-xs"\n\t\t\t\t\t\t\t\t\t\t        [disabled]="createArchiveCurrent"\n\t\t\t\t\t\t\t\t\t\t        (click)="createArchive(commit.commitID.substr(0, 7))">\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf="createArchiveCurrent === commit.commitID">Preparing</span>\n\t\t\t\t\t\t\t\t\t\t\t<span *ngIf="createArchiveCurrent !== commit.commitID">\n\t\t\t\t\t\t\t\t\t\t\t\tPrepare for download\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t<button class="btn btn-primary btn-xs"\n\t\t\t\t\t\t\t\t\t\t        (click)="editTag(commit)"\n\t\t\t\t\t\t\t\t\t\t        [ngClass]="{active: commit.editingTag}">\n\t\t\t\t\t\t\t\t\t\t\tAdd tag\n\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t<form *ngIf="commit.editingTag" class="form-inline"\n\t\t\t\t\t\t\t\t\t\t      (ngSubmit)="saveTag(commit)">\n\t\t\t\t\t\t\t\t\t\t\t<input class="form-control" placeholder="Tag label"\n\t\t\t\t\t\t\t\t\t\t\t       [(ngModel)]="commit.tagLabel" name="tagLabel">\n\t\t\t\t\t\t\t\t\t\t\t<button type="submit" class="btn btn-xs btn-primary"\n\t\t\t\t\t\t\t\t\t\t\t        [ngClass]="{disabled: commit.tagLabel===\'\'}">\n\t\t\t\t\t\t\t\t\t\t\t\tSave tag\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t\t\t\t\t<p *ngIf="commit.saveTagError" class="alert alert-danger">\n\t\t\t\t\t\t\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t\t\t\t\t\t\t        (click)="commit.saveTagError = \'\'">\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t\t{{commit.saveTagError}}\n\t\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t\t<p *ngIf="commit.saveTagSuccess"\n\t\t\t\t\t\t\t\t\t\t   class="alert alert-success">\n\t\t\t\t\t\t\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t\t\t\t\t\t\t        (click)="commit.saveTagSuccess = \'\'">\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t\t\t{{commit.saveTagSuccess}}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\n\t<div *ngIf="state === \'Config\'" class="panel-body">\n\t\t<p>\n\t\t\tEmu databases are configured by means of the _DBconfig.json file.\n\t\t</p>\n\n\t\t<p>\n\t\t\tThe emuDB Manager is only meant to manage a small portion of the numerous possible\n\t\t\tconfiguration options. All other options must be configured via emuR.\n\t\t</p>\n\n\t\t<hr>\n\n\t\t<div class="checkbox">\n\t\t\t<label>\n\t\t\t\t<input type="checkbox" [(ngModel)]="configComments">\n\t\t\t\tIn EMU-webApp, show “bundle comment” fields\n\t\t\t</label>\n\t\t</div>\n\n\t\t<div class="checkbox">\n\t\t\t<label>\n\t\t\t\t<input type="checkbox" [(ngModel)]="configFinishedEditing">\n\t\t\t\tIn EMU-webApp, show “finished editing” checkboxes\n\t\t\t</label>\n\t\t</div>\n\n\t\t<p *ngIf="saveConfigSuccess" class="alert alert-success">\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="saveConfigSuccess = \'\'">\n\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t</button>\n\n\t\t\t{{saveConfigSuccess}}\n\t\t</p>\n\n\t\t<p *ngIf="saveConfigError" class="alert alert-danger">\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="saveConfigError = \'\'">\n\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t</button>\n\n\t\t\t{{saveConfigError}}\n\t\t</p>\n\n\n\t\t<p>\n\t\t\t<button class="btn btn-default" (click)="saveConfiguration()">Save</button>\n\t\t</p>\n\n\t\t<p class="alert alert-warning" *ngIf="hasUnsavedChanges()">\n\t\t\tYou have unsaved changes.\n\t\t</p>\n\t</div>\n\n\t<div *ngIf="state === \'Rename\'" class="panel-body">\n\t\t<form (ngSubmit)="renameDatabase()">\n\t\t\t<p>\n\t\t\t\tCurrent name of the database: {{database?.name}}\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<input class="form-control" placeholder="New name" [(ngModel)]="newName"\n\t\t\t\t       name="newName" autocomplete="off">\n\t\t\t</p>\n\n\t\t\t<p *ngIf="renameSuccess" class="alert alert-success">\n\t\t\t\t<button type="button" class="close" aria-label="Close" (click)="renameSuccess = \'\'">\n\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t</button>\n\n\t\t\t\t{{renameSuccess}}\n\t\t\t</p>\n\n\t\t\t<p *ngIf="renameError" class="alert alert-danger">\n\t\t\t\t<button type="button" class="close" aria-label="Close" (click)="renameError = \'\'">\n\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t</button>\n\n\t\t\t\t{{renameError}}\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<button type="submit" class="btn btn-default">Rename</button>\n\t\t\t</p>\n\t\t</form>\n\t</div>\n\n</div>\n';
},757:function(t,e){t.exports='<div class="table-responsive">\n\t<table class="table table-striped">\n\t\t<thead>\n\t\t<tr>\n\t\t\t<th>Name</th>\n\t\t\t<th>Sessions</th>\n\t\t\t<th>Bundles</th>\n\t\t\t<th>Bundle lists</th>\n\t\t\t<th>Actions</th>\n\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\n\t\t<tr *ngFor="let database of databases">\n\t\t\t<td>{{database.name}}</td>\n\t\t\t<td>{{database.sessions.length}}</td>\n\t\t\t<td>{{countBundles(database.sessions)}}</td>\n\t\t\t<td>\n\t\t\t\t<ul>\n\t\t\t\t\t<li *ngFor="let bundleList of database.bundleLists">\n\t\t\t\t\t\t{{bundleList.name}}\n\t\t\t\t\t\t<span *ngIf="bundleList.archiveLabel">({{bundleList.archiveLabel}})</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button [routerLink]="[\'/project/databases\', database.name]"\n\t\t\t\t        class="btn btn-default">\n\t\t\t\t        View &amp; edit\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n'},758:function(t,e){t.exports='<div class="container-fluid">\n\t<div class="row">\n\n\t\t<nav class="col-sm-3 col-md-2 navbar sidebar navbar-collapse collapse">\n\t\t\t<ul class="nav nav-sidebar">\n\t\t\t\t<li routerLinkActive="active"><a routerLink="/project/overview">Project overview</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<ul class="nav nav-sidebar">\n\t\t\t\t<li routerLinkActive="active"><a routerLink="/project/databases">Databases <span\n\t\t\t\t\tclass="badge pull-right">{{databases?.length}}</span></a></li>\n\t\t\t\t<li routerLinkActive="active"><a routerLink="/project/bundle-lists">Bundle lists\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass="badge pull-right">{{bundleLists?.length}}</span></a></li>\n\t\t\t\t<li routerLinkActive="active"><a routerLink="/project/uploads">Uploads\n\t\t\t\t\t<span class="badge pull-right">{{uploads?.length}}</span></a></li>\n\t\t\t</ul>\n\t\t\t<ul class="nav nav-sidebar">\n\t\t\t\t<li><a (click)="projectDataService.fetchData()">Refresh</a></li>\n\t\t\t\t<li><a (click)="logout()">Logout</a></li>\n\t\t\t</ul>\n\t\t</nav>\n\n\t\t<div class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">\n\t\t\t<router-outlet></router-outlet>\n\t\t</div>\n\t</div>\n</div>\n'},759:function(t,e){t.exports='<h1 class="page-header">Uploaded database: {{upload?.name}}</h1>\n\n<p>\n\tUUID (Universally Unique Identifier): {{upload?.uuid}}\n</p>\n<p>\n\tUpload date: {{upload?.date}}\n</p>\n<p>\n    Name: {{upload?.name}}\n</p>\n<p>\n    Size:\n\n    {{upload?.sessions?.length}}\n    session<span *ngIf="upload?.sessions?.length !== 1">s</span>,\n\n    {{countBundles()}}\n    bundle<span *ngIf="countBundles() !== 1">s</span>\n</p>\n\n<hr>\n\n<div class="panel panel-default">\n\n\t<ul class="panel-body nav nav-pills nav-justified">\n\t\t<li role="presentation" [ngClass]="{active: state === \'Save\'}">\n\t\t\t<a (click)="state = \'Save\'">\n\t\t\t\tSave\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Sessions\'}">\n\t\t\t<a (click)="state = \'Sessions\'">\n\t\t\t\tSessions <span class="badge">{{upload?.sessions?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'Delete\'}">\n\t\t\t<a (click)="state = \'Delete\'">\n\t\t\t\tDelete\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n\n\t<div *ngIf="state === \'Save\'" class="panel-body">\n\t\t<div class="alert alert-info">\n\t\t\t<p>\n                <strong>Choose one out of three.</strong>\n                To work with the uploaded database, you can either save it as a\n                new database, or fast-forward an existing database to the\n                state of the uploaded one, or merge the uploaded database with\n                an existing one.\n\t\t\t</p>\n\n            <hr>\n\n            <p>\n                <strong>Fast-forwarding is helpful</strong>\n                when you have downloaded a database, made some modification\n                to it (be it a configuration change or newly added data) and\n                then re-uploaded the whole thing. Fast-forwarding is a term\n                introduced by git.\n            </p>\n\n\t\t\t<hr>\n\n\t\t\t<p>\n\t\t\t\t<strong>For fast-forwarding to work,</strong>\n\t\t\t\tyou must make <em>git commits</em> before uploading. The\n\t\t\t\tserver can only store committed modifications.\n\t\t\t</p>\n\t\t</div>\n\n\t\t<hr>\n\n        <h3 class="sub-header">\n            Save as a new database\n        </h3>\n\n\t\t<div>\n\t\t\t<form (ngSubmit)="saveUpload()">\n\t\t\t\t<div *ngIf="duplicateName">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe project already has a database named <strong>{{upload?.name}}</strong>.\n\t\t\t\t\t\tIf you want to save this upload as a database of its own, you have to\n\t\t\t\t\t\trename it first.\n\t\t\t\t\t</p>\n\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<input class="form-control" placeholder="New name"\n\t\t\t\t\t\t       [(ngModel)]="saveForm.newName" name="mergeNewName">\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<button type="submit" class="btn btn-default"\n\t\t\t\t\t\t        [disabled]="saveForm.newName == \'\'">\n\t\t\t\t\t\t\tSave uploaded data as a database named\n\n\t\t\t\t\t\t\t<strong *ngIf="saveForm.newName">{{saveForm.newName}}</strong>\n\t\t\t\t\t\t\t<em *ngIf="!saveForm.newName">[choose a name first]</em>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf="!duplicateName">\n\t\t\t\t\t<button type="submit" class="btn btn-default">\n\t\t\t\t\t\tSave <strong>{{upload?.name}}</strong> as a new database\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<p *ngIf="saveForm.messageSuccess" class="alert alert-success">\n\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t        (click)="saveForm.messageSuccess = \'\'">\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{{saveForm.messageSuccess}}\n\t\t\t\t</p>\n\n\t\t\t\t<p *ngIf="saveForm.messageError" class="alert alert-danger">\n\t\t\t\t\t<button type="button" class="close" aria-label="Close"\n\t\t\t\t\t        (click)="saveForm.messageError = \'\'">\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t\t</button>\n\n\t\t\t\t\t{{saveForm.messageError}}\n\t\t\t\t</p>\n\t\t\t</form>\n\t\t</div>\n\n        <hr>\n\n        <h3 class="sub-header">\n            Fast-forward existing database\n        </h3>\n\n        <div>\n            <form (ngSubmit)="fastForward()">\n                <div *ngIf="duplicateName">\n                    <p>\n                        The project already has a database named <strong>{{upload?.name}}</strong>.\n                        You can fast-forward the project’s database to the\n                        state of the one you have uploaded.\n                    </p>\n\n                    <p>\n                        <button type="submit" class="btn btn-default">\n                            Fast-forward database\n                            <strong>{{upload?.name}}</strong>\n                        </button>\n                    </p>\n                </div>\n\n                <div *ngIf="!duplicateName">\n                    The project does not yet have a database named <strong>{{upload?.name}}</strong>.\n                    You can only fast-forward an existing database that has\n                    the same name as the one you have uploaded.\n                </div>\n\n                <p *ngIf="fastForwardForm.messageSuccess"\n\t\t\t\t   class="alert alert-success">\n                    <button type="button" class="close" aria-label="Close"\n                            (click)="fastForwardForm.messageSuccess = \'\'">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n\n                    {{fastForwardForm.messageSuccess}}\n                </p>\n\n                <p *ngIf="fastForwardForm.messageError" class="alert alert-danger">\n                    <button type="button" class="close" aria-label="Close"\n                            (click)="fastForwardForm.messageError = \'\'">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n\n                    {{fastForwardForm.messageError}}\n                </p>\n            </form>\n        </div>\n\n        <hr>\n\n        <h3 class="sub-header">\n            Merge with existing database\n        </h3>\n\n        <div>\n            <p class="alert alert-danger">\n                The merge feature has not yet been implemented.\n            </p>\n\n            <div class="dropdown">\n                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMerge"\n                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">\n                    Merge <strong>{{upload?.name}}</strong> with database\n                    <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu" aria-labelledby="dropdownMerge">\n                    <li *ngIf="databaseList.length === 0">\n                        <a><em>No database available</em></a>\n                    </li>\n                    <li *ngFor="let database of databaseList"><a>{{database.name}}</a></li>\n                </ul>\n            </div>\n        </div>\n\t</div>\n\n\t<div *ngIf="state === \'Sessions\'" class="table-responsive">\n\t\t<emudbmanager-table class="table table-striped"\n\t\t\t\t\t\t\t[columns]="tableFormat" [data]="upload?.sessions">\n\t\t</emudbmanager-table>\n\t</div>\n\n\t<div *ngIf="state === \'Delete\'" class="panel-body">\n\t\t<div class="checkbox">\n\t\t\t<label>\n\t\t\t\t<input type="checkbox" [(ngModel)]="reallyDelete">\n\t\t\t\tDelete this upload? This is irreversible!\n\t\t\t</label>\n\t\t</div>\n\n\t\t<hr>\n\n\t\t<p *ngIf="deleteError" class="alert alert-danger">\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="deleteError = \'\'">\n\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t</button>\n\n\t\t\t{{deleteError}}\n\t\t</p>\n\n\t\t<p>\n\t\t\t<button type="button" class="btn btn-danger" [disabled]="!reallyDelete"\n\t\t\t        (click)="deleteUpload()">\n\t\t\t\tDelete\n\t\t\t</button>\n\t\t</p>\n\t</div>\n\n</div>\n'},760:function(t,e){t.exports='<div class="panel-body">\n\t<div class="alert alert-info">\n\t\t<p>\n\t\t\t<strong>Upload a zip file here.</strong>\n\t\t</p>\n\n\t\t<hr>\n\n\t\t<p>\n\t\t\t<strong>Make sure that the zip file</strong>\n\t\t\thas a name like <em>greatSpeechDatabase</em>_emuDB.zip.\n\t\t</p>\n\n\t\t<hr>\n\n\t\t<p>\n\t\t\t<strong>Make sure that the zip file</strong>\n\t\t\tcontains a valid EMU speech database: a directory called\n\t\t\t<em>greatSpeechDatabase</em>_emuDB, which in turn contains\n\t\t\t<em>greatSpeechDatabase</em>_DBconfig.json and a number of\n\t\t\tsession directories.\n\t\t</p>\n\n\t\t<hr>\n\n\t\t<p>\n\t\t\t<strong>If you plan to do a fast-forward</strong>\n\t\t\twith the upload, make sure to <em>git commit</em> all your\n\t\t\tmodifications before creating the zip file.\n\t\t</p>\n\n\t\t<hr>\n\n\t\t<p>\n\t\t\t<strong>If you plan to merge two databases,</strong>\n\t\t\tmake sure the new data and the existing data fit together. In\n\t\t\tparticular, they must contain the same annotation structure, i.e.\n\t\t\tthe same level and the same types of links.\n\t\t</p>\n\t</div>\n\n\t<div>\n\t\t<label for="file-pb">\n\t\t\t<span class="glyphicon glyphicon-upload"></span>\n\t\t\tSelect a file to upload\n\t\t</label>\n\t\t<input type="file" id="file-pb" ngFileSelect [options]="options"\n\t\t       (onUpload)="handleProgress($event)">\n\t</div>\n\n\t<div>\n\t\t<div class="progress">\n\t\t\t<div class="progress-bar progress-bar-striped" role="progressbar"\n\t\t\t     [attr.aria-valuenow]="uploadProgress" aria-valuemin="0" aria-valuemax="100"\n\t\t\t     [style.width]="uploadProgress + \'%\'">\n\t\t\t\t{{uploadProgress}} %\n\t\t\t</div>\n\t\t</div>\n\n\t\t<p *ngIf="transferMessage" class="alert alert-success">\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="transferMessage = \'\'">\n\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t</button>\n\n\t\t\t{{transferMessage}}\n\t\t</p>\n\n\t\t<p *ngIf="successMessage" class="alert alert-success">\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="successMessage = \'\'">\n\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t</button>\n\n\t\t\t{{successMessage}}\n\t\t</p>\n\n\t\t<p *ngIf="errorMessage" class="alert alert-danger">\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="errorMessage = \'\'">\n\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t</button>\n\n\t\t\t{{errorMessage}}\n\t\t</p>\n\t</div>\n</div>\n\n'},761:function(t,e){t.exports='<h1 class="page-header">Uploads</h1>\n\n<div class="panel panel-default">\n\t<ul class="panel-body nav nav-pills nav-justified">\n\t\t<li role="presentation" [ngClass]="{active: state === \'Overview\'}">\n\t\t\t<a (click)="state = \'Overview\'">\n\t\t\t\tUploaded databases <span class="badge">{{uploads?.length}}</span>\n\t\t\t</a>\n\t\t</li>\n\t\t<li role="presentation" [ngClass]="{active: state === \'New\'}">\n\t\t\t<a (click)="state = \'New\'">\n\t\t\t\tUpload new file\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n\n\t<emudbmanager-uploads-overview *ngIf="state === \'Overview\'">\n\t</emudbmanager-uploads-overview>\n\n\t<emudbmanager-upload-form *ngIf="state === \'New\'" class="panel-body">\n\t</emudbmanager-upload-form>\n</div>\n'},762:function(t,e){t.exports='<div class="table-responsive">\n\t<table class="table table-striped">\n\t\t<thead>\n\t\t<tr>\n\t\t\t<th>Unique identifier (UUID)</th>\n\t\t\t<th>Database name</th>\n\t\t\t<th>Upload date</th>\n\t\t\t<th>Sessions</th>\n\t\t\t<th>Bundles</th>\n\t\t\t<th>Actions</th>\n\t\t</tr>\n\t\t</thead>\n\n\t\t<tbody>\n\t\t<tr *ngFor="let upload of uploads">\n\t\t\t<td>{{upload.uuid}}</td>\n\t\t\t<td>{{upload.name}}</td>\n\t\t\t<td>{{upload.date}}</td>\n\t\t\t<td>{{upload.sessions.length}}</td>\n\t\t\t<td>{{countBundles(upload.sessions)}}</td>\n\t\t\t<td>\n\t\t\t\t<button [routerLink]="[\'/project/uploads\', upload.uuid]" class="btn btn-default">\n\t\t\t\t\tView &amp; edit\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t\t</tbody>\n\t</table>\n</div>\n'},763:function(t,e){t.exports='<h1 class="page-header">emuDB Manager</h1>\n\n<div class="panel panel-default">\n\t<div class="panel-heading">Login</div>\n\t<div class="panel-body">\n\t\t<form (ngSubmit)="checkLogin()">\n\t\t\t<p>\n\t\t\t\t<input autofocus class="form-control" placeholder="Username" [(ngModel)]="username"\n\t\t\t\t       name="username">\n\t\t\t</p>\n\n\t\t\t<p>\n\t\t\t\t<input class="form-control" type="password" placeholder="Password"\n\t\t\t\t       [(ngModel)]="password" name="password">\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<button type="submit" class="btn btn-default">\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t<p *ngIf="loginFailed" class="alert alert-danger" role="alert">\n\t\t\t\tInvalid login credentials supplied.\n\t\t\t\t<button type="button" class="close" aria-label="Close" (click)="loginFailed = false">\n\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t<div *ngIf="unknownError" class="alert alert-danger" role="alert">\n\t\t\t\t<button type="button" class="close" aria-label="Close" (click)="unknownError = false">\n\t\t\t\t\t<span aria-hidden="true">&times;</span>\n\t\t\t\t</button>\n\n\t\t\t\t<p>\n\t\t\t\t\tAn error has occurred. The project data could not be loaded.\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tPlease check your internet connection, or consult your system administrator\n\t\t\t\t\tor the software provider.\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\t\tError message: {{unknownErrorMessage}}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</form>\n\t</div>\n</div>\n\n<div class="panel panel-primary">\n\t<div class="panel-heading">What is this?</div>\n\t<div class="panel-body">\n\t\t<p>This manager is a part of the EMU Speech Database Management System (EMU\n\t\t\tSDMS).</p>\n\n\t\t<p>\n\t\t\tEMU offers a unique way to store and analyse data collected in the speech\n\t\t\tsciences\n\t\t\tand linguistics.\n\t\t</p>\n\n\t\t<p>\n\t\t\tThis manager allows your research group to:\n\t\t</p>\n\n\t\t<ul>\n\t\t\t<li>create and manage a number of EMU Databases</li>\n\t\t\t<li>assign parts of the database to project members for segmentation,\n\t\t\t\tlabelling and\n\t\t\t\tvalidation\n\t\t\t\ttasks\n\t\t\t</li>\n\t\t\t<li>extend your databases with newly collected data</li>\n\t\t</ul>\n\t</div>\n</div>\n'}},[1029]);
//# sourceMappingURL=main.42fb4a756dd46da77cca.bundle.map